{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nlet PackingFormComponent = class PackingFormComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n    this.packingForm = new FormGroup({});\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.packingForm = this.fb.group({\n      weightLimit: ['', Validators.required],\n      items: this.fb.array([])\n    });\n  }\n  get items() {\n    return this.packingForm.get('items');\n  }\n  addItem() {\n    const itemGroup = this.fb.group({\n      index: ['', Validators.required],\n      weight: ['', Validators.required],\n      cost: ['', Validators.required]\n    });\n    this.items.push(itemGroup);\n  }\n  removeItem(index) {\n    this.items.removeAt(index);\n  }\n  submitForm() {\n    if (this.packingForm.valid) {\n      // Implementing the logic to send the form data to the server\n      const formValue = this.packingForm.value;\n      const filePath = '../../../../../input.txt'; // Set the file path to input.txt file\n      this.callPackAPI(filePath); // Pass the file path to the API method\n      console.log(formValue);\n    }\n  }\n};\nPackingFormComponent = __decorate([Component({\n  selector: 'app-packing-form',\n  templateUrl: './packing-form.component.html',\n  styleUrls: ['./packing-form.component.css']\n})], PackingFormComponent);\nexport { PackingFormComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAsBC,SAAS,EAAaC,UAAU,QAAQ,gBAAgB;AAOvE,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAG/BC,YAAoBC,EAAe,EAAUC,IAAgB;IAAzC,OAAE,GAAFD,EAAE;IAAuB,SAAI,GAAJC,IAAI;IAFjD,gBAAW,GAAc,IAAIL,SAAS,CAAC,EAAE,CAAC;EAEuB;EAEjEM,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQ;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC/BC,WAAW,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MACtCC,KAAK,EAAE,IAAI,CAACR,EAAE,CAACS,KAAK,CAAC,EAAE;KACxB,CAAC;EACJ;EAEA,IAAID,KAAK;IACP,OAAO,IAAI,CAACJ,WAAW,CAACM,GAAG,CAAC,OAAO,CAAc;EACnD;EAEAC,OAAO;IACL,MAAMC,SAAS,GAAG,IAAI,CAACZ,EAAE,CAACK,KAAK,CAAC;MAC9BQ,KAAK,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACU,QAAQ,CAAC;MAChCO,MAAM,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACU,QAAQ,CAAC;MACjCQ,IAAI,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACU,QAAQ;KAC/B,CAAC;IAEF,IAAI,CAACC,KAAK,CAACQ,IAAI,CAACJ,SAAS,CAAC;EAC5B;EAEAK,UAAU,CAACJ,KAAa;IACtB,IAAI,CAACL,KAAK,CAACU,QAAQ,CAACL,KAAK,CAAC;EAC5B;EAEAM,UAAU;IACR,IAAI,IAAI,CAACf,WAAW,CAACgB,KAAK,EAAE;MAC1B;MACA,MAAMC,SAAS,GAAG,IAAI,CAACjB,WAAW,CAACkB,KAAK;MACxC,MAAMC,QAAQ,GAAG,0BAA0B,CAAC,CAAC;MAC7C,IAAI,CAACC,WAAW,CAACD,QAAQ,CAAC,CAAC,CAAC;MAC5BE,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;;EAE1B;CACD;AA3CYvB,oBAAoB,eALhCH,SAAS,CAAC;EACTgC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACW/B,oBAAoB,CA2ChC;SA3CYA,oBAAoB","names":["Component","FormGroup","Validators","PackingFormComponent","constructor","fb","http","ngOnInit","initForm","packingForm","group","weightLimit","required","items","array","get","addItem","itemGroup","index","weight","cost","push","removeItem","removeAt","submitForm","valid","formValue","value","filePath","callPackAPI","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\packing-form\\packing-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-packing-form',\n  templateUrl: './packing-form.component.html',\n  styleUrls: ['./packing-form.component.css']\n})\nexport class PackingFormComponent implements OnInit {\n  packingForm: FormGroup = new FormGroup({});\n\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.packingForm = this.fb.group({\n      weightLimit: ['', Validators.required],\n      items: this.fb.array([])\n    });\n  }\n\n  get items(): FormArray {\n    return this.packingForm.get('items') as FormArray;\n  }\n\n  addItem(): void {\n    const itemGroup = this.fb.group({\n      index: ['', Validators.required],\n      weight: ['', Validators.required],\n      cost: ['', Validators.required]\n    });\n\n    this.items.push(itemGroup);\n  }\n\n  removeItem(index: number): void {\n    this.items.removeAt(index);\n  }\n\n  submitForm(): void {\n    if (this.packingForm.valid) {\n      // Implementing the logic to send the form data to the server\n      const formValue = this.packingForm.value;\n      const filePath = '../../../../../input.txt'; // Set the file path to input.txt file\n      this.callPackAPI(filePath); // Pass the file path to the API method\n      console.log(formValue);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}