{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction FetchParcelDataComponent_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 2)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Temp. (C)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Temp. (F)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Summary\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(11, \"tbody\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class FetchParcelDataComponent {\n  constructor(http, baseUrl) {\n    this.parcels = [];\n    http.get(baseUrl + 'parcel').subscribe(result => {\n      this.parcels = result;\n    }, error => console.error(error));\n  }\n}\nFetchParcelDataComponent.ɵfac = function FetchParcelDataComponent_Factory(t) {\n  return new (t || FetchParcelDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchParcelDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchParcelDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[\"id\", \"tableLabel\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"]],\n  template: function FetchParcelDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Weather forecast\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchParcelDataComponent_table_4_Template, 12, 0, \"table\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.forecasts);\n    }\n  },\n  dependencies: [i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAMAA,gCAAkF;IAGxEA,oBAAI;IAAAA,iBAAK;IACbA,0BAAI;IAAAA,yBAAS;IAAAA,iBAAK;IAClBA,0BAAI;IAAAA,yBAAS;IAAAA,iBAAK;IAClBA,0BAAI;IAAAA,wBAAO;IAAAA,iBAAK;IAGpBA,yBAOQ;IACVA,iBAAQ;;;ACdR,OAAM,MAAOC,wBAAwB;EAGnCC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,YAAO,GAAa,EAAE;IAG3BD,IAAI,CAACE,GAAG,CAAWD,OAAO,GAAG,QAAQ,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MACxD,IAAI,CAACC,OAAO,GAAGD,MAAM;IACvB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAPWR,wBAAwB;mBAAxBA,wBAAwB,4DAGG,UAAU;AAAA;AAHrCA,wBAAwB;QAAxBA,wBAAwB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTrCf,6BAAoB;MAAAA,gCAAgB;MAAAA,iBAAK;MAEzCA,yBAAG;MAAAA,0EAA0D;MAAAA,iBAAI;MAIjEA,8EAiBQ;;;MAjByDA,eAAe;MAAfA,oCAAe","names":["i0","FetchParcelDataComponent","constructor","http","baseUrl","get","subscribe","result","parcels","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\fetchParcelData\\fetchParcelData.component.html","C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\fetchParcelData\\fetchParcelData.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<!--<p *ngIf=\"!forecasts\"><em>Loading...</em></p>-->\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n<!--    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>-->\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Parcel } from '../interfaces/parcel.interface';\r\nimport { Item } from '../interfaces/item.interface'\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetchParcelData.component.html'\r\n})\r\nexport class FetchParcelDataComponent {\r\n  public parcels: Parcel[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<Parcel[]>(baseUrl + 'parcel').subscribe(result => {\r\n      this.parcels = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}