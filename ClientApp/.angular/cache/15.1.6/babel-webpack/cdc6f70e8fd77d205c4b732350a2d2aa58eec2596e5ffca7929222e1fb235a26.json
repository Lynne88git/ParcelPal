{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../../services/parcel-data-service\";\nimport * as i4 from \"@angular/common\";\nfunction PackingFormComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const weightLimit_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", weightLimit_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", weightLimit_r3, \"kg\");\n  }\n}\nfunction PackingFormComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Please select a parcel/box weight before adding an item. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PackingFormComponent_div_19_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", option_r8.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r8.label, \" \");\n  }\n}\nfunction PackingFormComponent_div_19_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"p\");\n    i0.ɵɵtext(2, \"Selected Item:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Index: \", ctx_r7.selectedItem.index, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Name: \", ctx_r7.selectedItem.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Weight: \", ctx_r7.selectedItem.weight, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Cost: \", ctx_r7.selectedItem.cost, \"\");\n  }\n}\nfunction PackingFormComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 21)(2, \"div\", 22)(3, \"div\", 8)(4, \"label\", 23);\n    i0.ɵɵtext(5, \"Select Item:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"select\", 24);\n    i0.ɵɵlistener(\"change\", function PackingFormComponent_div_19_Template_select_change_6_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onWeightSelected());\n    });\n    i0.ɵɵelementStart(7, \"option\", 25);\n    i0.ɵɵtext(8, \"-- Select Item --\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, PackingFormComponent_div_19_option_9_Template, 2, 2, \"option\", 26);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 22)(11, \"label\", 27);\n    i0.ɵɵtext(12, \"Weight\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 22)(15, \"label\", 27);\n    i0.ɵɵtext(16, \"Cost\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 29);\n    i0.ɵɵelement(18, \"input\", 30);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 31);\n    i0.ɵɵtemplate(20, PackingFormComponent_div_19_div_20_Template, 11, 4, \"div\", 32);\n    i0.ɵɵelementStart(21, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function PackingFormComponent_div_19_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.addItemToParcel(ctx_r11.selectedItem));\n    });\n    i0.ɵɵtext(22, \"Add to Parcel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function PackingFormComponent_div_19_Template_button_click_23_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const i_r5 = restoredCtx.index;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.removeItem(i_r5));\n    });\n    i0.ɵɵtext(24, \"Remove Item\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const i_r5 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    i0.ɵɵproperty(\"formGroupName\", i_r5);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngValue\", null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.itemsByWeight[(tmp_2_0 = ctx_r2.packingForm.get(\"weightLimit\")) == null ? null : tmp_2_0.value]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", (ctx_r2.selectedItem == null ? null : ctx_r2.selectedItem.weight) || \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"value\", (ctx_r2.selectedItem == null ? null : ctx_r2.selectedItem.cost) || \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectedItem);\n  }\n}\nexport class PackingFormComponent {\n  constructor(fb, http, parcelDataService) {\n    this.fb = fb;\n    this.http = http;\n    this.parcelDataService = parcelDataService;\n    this.packingForm = new FormGroup({});\n    this.availableItems = []; // Update this with the items from input.txt\n    this.sampleParcelWeights = []; // Update this with the sample parcel weights from input.txt\n    this.selectedItems = [];\n    this.selectedItem = null; // Update this line to store the selected item\n    this.itemsByWeight = {};\n    this.showWeightError = false;\n  }\n  ngOnInit() {\n    this.initForm();\n    this.parcelDataService.fetchParcels().subscribe(parcels => {\n      this.parseInputData(parcels);\n      this.updateItemsByWeight();\n    }, error => {\n      console.error(error);\n    });\n  }\n  initForm() {\n    this.packingForm = this.fb.group({\n      weightLimit: ['', Validators.required],\n      items: this.fb.array([])\n    });\n    this.packingForm.get('weightLimit')?.valueChanges.subscribe(selectedWeight => {\n      this.filterItemsByWeight(selectedWeight);\n    });\n  }\n  get items() {\n    return this.packingForm.get('items');\n  }\n  createItemGroup(item) {\n    return this.fb.group({\n      index: [item.index, Validators.required],\n      weight: [`${item.weight}kg`],\n      cost: [`${item.cost}`]\n    });\n  }\n  addItem() {\n    const selectedWeight = this.packingForm.get('weightLimit')?.value;\n    if (selectedWeight) {\n      const emptyItem = {\n        index: '',\n        name: '',\n        weight: 0,\n        cost: ''\n      };\n      this.items.push(this.createItemGroup(emptyItem));\n    } else {\n      // Display an error message or perform any desired action\n      this.showWeightError = true; // Set the error flag to display the message\n      console.log('Please select a parcel/box weight before adding an item.');\n    }\n  }\n  removeItem(index) {\n    this.items.removeAt(index);\n  }\n  filterItemsByWeight(selectedWeight) {\n    const selectedItems = this.selectedItems.find(item => item.weight === selectedWeight);\n    if (selectedItems) {\n      this.availableItems = selectedItems.items;\n    } else {\n      this.availableItems = [];\n    }\n  }\n  parseInputData(parcels) {\n    for (const parcel of parcels) {\n      this.sampleParcelWeights.push(parcel.weight);\n      this.selectedItems.push({\n        weight: parcel.weight,\n        items: parcel.items\n      });\n      this.itemsByWeight[parcel.weight] = parcel.items.map(item => ({\n        value: {\n          index: item.index,\n          name: item.name,\n          weight: item.weight,\n          cost: item.cost\n        },\n        label: `${item.index}, ${item.name}`,\n        weight: `${item.weight}kg`,\n        cost: `${item.cost}`\n      }));\n    }\n  }\n  updateItemsByWeight() {\n    for (const {\n      weight,\n      items\n    } of this.selectedItems) {\n      this.itemsByWeight[weight] = items.map(item => ({\n        value: {\n          index: item.index,\n          name: item.name,\n          weight: item.weight,\n          cost: item.cost\n        },\n        label: `${item.index}, ${item.name}`,\n        weight: `${item.weight}kg`,\n        cost: `${item.cost}`,\n        selectedItem: false // Add a new property to track selection\n      }));\n    }\n  }\n  //addItemAndLogSelection(item: any): void {\n  //  console.log('Selected Item:', item.index.name);\n  //  const selectedItem = {\n  //    index: item.index.index,\n  //    name: item.index.name,\n  //    weight: item.index.weight,\n  //    cost: item.index.cost\n  //  };\n  //  this.items.push(this.createItemGroup(item.index.name));\n  //  console.log('Selected Item:', selectedItem);\n  //}\n  addItemToParcel(item) {\n    this.selectedItem = item; // Get the selected item values from the form\n    console.log(item);\n    // Process the selected items and add them to the sample parcel box\n    // ...\n  }\n\n  submitForm() {\n    if (this.packingForm.valid) {\n      const formValue = this.packingForm.value;\n      console.log(formValue);\n    }\n  }\n  onWeightSelected() {\n    const weightLimit = this.packingForm.get('weightLimit')?.value;\n    const selectedItemIndex = this.packingForm.get('items')?.value[this.items.controls.length - 1]?.index;\n    if (weightLimit && selectedItemIndex !== null) {\n      const selectedItems = this.itemsByWeight[weightLimit];\n      const selectedItem = selectedItems.find(item => item.value === selectedItemIndex);\n      if (selectedItem) {\n        this.selectedItem = selectedItem;\n      }\n    }\n  }\n}\nPackingFormComponent.ɵfac = function PackingFormComponent_Factory(t) {\n  return new (t || PackingFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.ParcelDataService));\n};\nPackingFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PackingFormComponent,\n  selectors: [[\"app-packing-form\"]],\n  decls: 24,\n  vars: 5,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-12\"], [1, \"d-flex\", \"justify-content-center\", \"mt-5\"], [\"src\", \"../../assets/logo.png\", \"alt\", \"App Logo\", 1, \"app-logo\"], [1, \"col-6\"], [1, \"p-5\", \"packingForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-light\", \"mb-2\"], [1, \"form-group\"], [\"for\", \"weight\", 1, \"text-light\", \"my-2\"], [\"id\", \"weight\", \"formControlName\", \"weightLimit\", 1, \"form-control\", 3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"formArrayName\", \"items\"], [\"class\", \"item-group\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-yellow\", \"py-2\", \"my-2\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-yellow\", \"mx-2\", \"py-2\", 3, \"disabled\"], [3, \"value\"], [1, \"text-danger\"], [1, \"item-group\", 3, \"formGroupName\"], [1, \"form-row\", \"w-50\", \"mt-4\"], [1, \"col\"], [\"for\", \"selectedItem\", 1, \"text-light\"], [\"formControlName\", \"index\", 1, \"form-control\", 3, \"change\"], [3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-light\"], [\"type\", \"text\", \"formControlName\", \"weight\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [1, \"input-group\"], [\"type\", \"text\", \"formControlName\", \"cost\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [1, \"d-flex\", \"justify-content-start\"], [\"class\", \"selected-item\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-yellow\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-yellow\", \"my-2\", 3, \"click\"], [1, \"selected-item\"]],\n  template: function PackingFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 5)(7, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function PackingFormComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(8, \"h4\", 7);\n      i0.ɵɵtext(9, \"Choose a Sample Size Shipping Box\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n      i0.ɵɵtext(12, \"Weight\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"select\", 10);\n      i0.ɵɵlistener(\"change\", function PackingFormComponent_Template_select_change_13_listener() {\n        return ctx.onWeightSelected();\n      });\n      i0.ɵɵelementStart(14, \"option\", 11);\n      i0.ɵɵtext(15, \"-- Select Weight Limit --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, PackingFormComponent_option_16_Template, 2, 2, \"option\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, PackingFormComponent_div_17_Template, 2, 0, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 14);\n      i0.ɵɵtemplate(19, PackingFormComponent_div_19_Template, 25, 6, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function PackingFormComponent_Template_button_click_20_listener() {\n        return ctx.addItem();\n      });\n      i0.ɵɵtext(21, \"Add Item\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 17);\n      i0.ɵɵtext(23, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.packingForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.sampleParcelWeights);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showWeightError);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items.controls);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.packingForm.valid || ctx.items.length === 0);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n  styles: [\".item-group[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.btn-danger[_ngcontent-%COMP%] {\\r\\n  margin-left: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wYWNraW5nLWZvcm0vcGFja2luZy1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5pdGVtLWdyb3VwIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuLmJ0bi1kYW5nZXIge1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","Validators","i0","PackingFormComponent","constructor","fb","http","parcelDataService","ngOnInit","initForm","fetchParcels","subscribe","parcels","parseInputData","updateItemsByWeight","error","console","packingForm","group","weightLimit","required","items","array","get","valueChanges","selectedWeight","filterItemsByWeight","createItemGroup","item","index","weight","cost","addItem","value","emptyItem","name","push","showWeightError","log","removeItem","removeAt","selectedItems","find","availableItems","parcel","sampleParcelWeights","itemsByWeight","map","label","selectedItem","addItemToParcel","submitForm","valid","formValue","onWeightSelected","selectedItemIndex","controls","length","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\components\\packing-form\\packing-form.component.ts","C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\components\\packing-form\\packing-form.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Item } from '../../interfaces/item.interface';\r\nimport { Parcel } from '../../interfaces/parcel.interface';\r\nimport { ParcelDataService } from '../../services/parcel-data-service';\r\n\r\n@Component({\r\n  selector: 'app-packing-form',\r\n  templateUrl: './packing-form.component.html',\r\n  styleUrls: ['./packing-form.component.css']\r\n})\r\nexport class PackingFormComponent implements OnInit {\r\n  packingForm: FormGroup = new FormGroup({});\r\n  availableItems: Item[] = []; // Update this with the items from input.txt\r\n  sampleParcelWeights: number[] = []; // Update this with the sample parcel weights from input.txt\r\n  selectedItems: { weight: number, items: Item[] }[] = [];\r\n  selectedItem: Item | null = null; // Update this line to store the selected item\r\n  itemsByWeight: Record<number, any[]> = {};\r\n  showWeightError = false;\r\n  constructor(private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    private parcelDataService: ParcelDataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    this.parcelDataService.fetchParcels().subscribe(\r\n      (parcels: Parcel[]) => {\r\n        this.parseInputData(parcels);\r\n        this.updateItemsByWeight();\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  initForm(): void {\r\n    this.packingForm = this.fb.group({\r\n      weightLimit: ['', Validators.required],\r\n      items: this.fb.array([])\r\n    });\r\n\r\n    this.packingForm.get('weightLimit')?.valueChanges.subscribe((selectedWeight) => {\r\n      this.filterItemsByWeight(selectedWeight);\r\n    });\r\n  }\r\n\r\n  get items(): FormArray {\r\n    return this.packingForm.get('items') as FormArray;\r\n  }\r\n\r\n  createItemGroup(item: Item): FormGroup {\r\n    return this.fb.group({\r\n      index: [item.index, Validators.required],\r\n      weight: [`${item.weight}kg`],\r\n      cost: [`${item.cost}`]\r\n    });\r\n  }\r\n\r\n  addItem(): void {\r\n    const selectedWeight = this.packingForm.get('weightLimit')?.value;\r\n    if (selectedWeight) {\r\n    const emptyItem: Item = { index: '', name: '', weight: 0, cost: '' };\r\n      this.items.push(this.createItemGroup(emptyItem));\r\n    } else {\r\n      // Display an error message or perform any desired action\r\n      this.showWeightError = true; // Set the error flag to display the message\r\n      console.log('Please select a parcel/box weight before adding an item.');\r\n    }\r\n  }\r\n\r\n  removeItem(index: number): void {\r\n    this.items.removeAt(index);\r\n  }\r\n\r\n  filterItemsByWeight(selectedWeight: number): void {\r\n    const selectedItems = this.selectedItems.find(item => item.weight === selectedWeight);\r\n    if (selectedItems) {\r\n      this.availableItems = selectedItems.items;\r\n    } else {\r\n      this.availableItems = [];\r\n    }\r\n  }\r\n\r\n  parseInputData(parcels: Parcel[]): void {\r\n    for (const parcel of parcels) {\r\n      this.sampleParcelWeights.push(parcel.weight);\r\n      this.selectedItems.push({ weight: parcel.weight, items: parcel.items });\r\n\r\n      this.itemsByWeight[parcel.weight] = parcel.items.map((item) => ({\r\n        value: { index: item.index, name: item.name, weight: item.weight, cost: item.cost },\r\n        label: `${item.index}, ${item.name}`,\r\n        weight: `${item.weight}kg`,\r\n        cost: `${item.cost}`\r\n      }));\r\n    }\r\n  }\r\n\r\n\r\n  updateItemsByWeight(): void {\r\n    for (const { weight, items } of this.selectedItems) {\r\n      this.itemsByWeight[weight] = items.map((item) => ({\r\n        value: { index: item.index, name: item.name, weight: item.weight, cost: item.cost },\r\n        label: `${item.index}, ${item.name}`,\r\n        weight: `${item.weight}kg`,\r\n        cost: `${item.cost}`,\r\n        selectedItem: false // Add a new property to track selection\r\n      }));\r\n    }\r\n  }\r\n\r\n  //addItemAndLogSelection(item: any): void {\r\n  //  console.log('Selected Item:', item.index.name);\r\n  //  const selectedItem = {\r\n  //    index: item.index.index,\r\n  //    name: item.index.name,\r\n  //    weight: item.index.weight,\r\n  //    cost: item.index.cost\r\n  //  };\r\n  //  this.items.push(this.createItemGroup(item.index.name));\r\n  //  console.log('Selected Item:', selectedItem);\r\n  //}\r\n\r\n  addItemToParcel(item: any) {\r\n    this.selectedItem = item; // Get the selected item values from the form\r\n    console.log(item)\r\n  // Process the selected items and add them to the sample parcel box\r\n  // ...\r\n}\r\n\r\n\r\n  submitForm(): void {\r\n    if (this.packingForm.valid) {\r\n      const formValue = this.packingForm.value;\r\n      console.log(formValue);\r\n    }\r\n  }\r\n\r\n  onWeightSelected(): void {\r\n    const weightLimit = this.packingForm.get('weightLimit')?.value;\r\n    const selectedItemIndex = this.packingForm.get('items')?.value[this.items.controls.length - 1]?.index;\r\n\r\n    if (weightLimit && selectedItemIndex !== null) {\r\n      const selectedItems = this.itemsByWeight[weightLimit];\r\n      const selectedItem = selectedItems.find(item => item.value === selectedItemIndex);\r\n\r\n      if (selectedItem) {\r\n        this.selectedItem = selectedItem;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"d-flex justify-content-center mt-5\">\r\n                <img src=\"../../assets/logo.png\" alt=\"App Logo\" class=\"app-logo\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <form class=\"p-5 packingForm\" [formGroup]=\"packingForm\" (ngSubmit)=\"submitForm()\">\r\n                <h4 class=\"text-light mb-2\">Choose a Sample Size Shipping Box</h4>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"weight\" class=\"text-light my-2\">Weight</label>\r\n                    <!-- Weight dropdown -->\r\n                    <select class=\"form-control\" id=\"weight\" formControlName=\"weightLimit\" (change)=\"onWeightSelected()\">\r\n                        <option value=\"\">-- Select Weight Limit --</option>\r\n                        <option *ngFor=\"let weightLimit of sampleParcelWeights\" [value]=\"weightLimit\">{{ weightLimit }}kg</option>\r\n                    </select>\r\n                      <div class=\"text-danger\" *ngIf=\"showWeightError\">\r\n                                Please select a parcel/box weight before adding an item.\r\n                      </div>\r\n                </div>\r\n\r\n                <div formArrayName=\"items\">\r\n                    <div class=\"item-group\" *ngFor=\"let itemGroup of items.controls; let i = index\" [formGroupName]=\"i\">\r\n                        <div class=\"form-row w-50 mt-4\">\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"text-light\" for=\"selectedItem\">Select Item:</label>\r\n                                    <select class=\"form-control\" formControlName=\"index\" (change)=\"onWeightSelected()\">\r\n                                        <option [ngValue]=\"null\">-- Select Item --</option>\r\n                                        <option *ngFor=\"let option of itemsByWeight[packingForm.get('weightLimit')?.value]\" [ngValue]=\"option.value\">\r\n                                            {{ option.label }}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label class=\"text-light\">Weight</label>\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"weight\" [value]=\"selectedItem?.weight || ''\" readonly>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label class=\"text-light\">Cost</label>\r\n                                <div class=\"input-group\">\r\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"cost\" [value]=\"selectedItem?.cost || ''\" readonly>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"d-flex justify-content-start\">\r\n                                     <div *ngIf=\"selectedItem\" class=\"selected-item\">\r\n                                      <p>Selected Item:</p>\r\n                                      <p>Index: {{ selectedItem.index }}</p>\r\n                                      <p>Name: {{ selectedItem.name }}</p>\r\n                                      <p>Weight: {{ selectedItem.weight }}</p>\r\n                                      <p>Cost: {{ selectedItem.cost }}</p>\r\n                                    </div>\r\n                                 <button type=\"button\" class=\"btn btn-yellow\" (click)=\"addItemToParcel(selectedItem)\">Add to Parcel</button>\r\n                                <button type=\"button\" class=\"btn btn-yellow my-2\" (click)=\"removeItem(i)\">Remove Item</button>\r\n                            </div>\r\n                        </div>\r\n                \r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" class=\"btn btn-yellow py-2 my-2\" (click)=\"addItem()\">Add Item</button>\r\n                <button type=\"submit\" [disabled]=\"!packingForm.valid || items.length === 0\" class=\"btn btn-yellow mx-2 py-2\">Submit</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}