{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction PackingFormComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const weightLimit_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", weightLimit_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", weightLimit_r2, \"kg\");\n  }\n}\nfunction PackingFormComponent_div_18_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", option_r6.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r6.label, \" \");\n  }\n}\nfunction PackingFormComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"div\", 19)(3, \"div\", 7)(4, \"label\", 20);\n    i0.ɵɵtext(5, \"Select Item:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"select\", 21);\n    i0.ɵɵlistener(\"change\", function PackingFormComponent_div_18_Template_select_change_6_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onWeightSelected());\n    });\n    i0.ɵɵelementStart(7, \"option\", 22);\n    i0.ɵɵtext(8, \"-- Select Item --\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, PackingFormComponent_div_18_option_9_Template, 2, 2, \"option\", 23);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 19)(11, \"label\", 24);\n    i0.ɵɵtext(12, \"Weight\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 19)(15, \"label\", 24);\n    i0.ɵɵtext(16, \"Cost\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 26);\n    i0.ɵɵelement(18, \"input\", 27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 28)(20, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function PackingFormComponent_div_18_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const i_r4 = restoredCtx.index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.removeItem(i_r4));\n    });\n    i0.ɵɵtext(21, \"Remove Item\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const i_r4 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    i0.ɵɵproperty(\"formGroupName\", i_r4);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngValue\", null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.itemsByWeight[(tmp_2_0 = ctx_r1.packingForm.get(\"weightLimit\")) == null ? null : tmp_2_0.value]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", (ctx_r1.selectedItem == null ? null : ctx_r1.selectedItem.weight) || \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"value\", (ctx_r1.selectedItem == null ? null : ctx_r1.selectedItem.cost) || \"\");\n  }\n}\nexport class PackingFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.parcelData = [];\n    this.availableItems = []; // Items fetched from the API\n    this.sampleParcelWeights = []; // Sample parcel weights fetched from the API\n    this.packingForm = new FormGroup({});\n    //selectedItems: { weight: number, items: Item[] }[] = [];\n    this.selectedItem = null; // Update this line to store the selected item\n    this.itemsByWeight = {};\n    this.filteredItems = []; // New property for filtered items\n  }\n\n  ngOnInit() {\n    this.initForm();\n    this.updateItemsByWeight();\n  }\n  initForm() {\n    this.packingForm = this.fb.group({\n      weightLimit: ['', Validators.required],\n      items: this.fb.array([])\n    });\n    this.packingForm.get('weightLimit')?.valueChanges.subscribe(selectedWeight => {\n      this.filterItemsByWeight(selectedWeight);\n    });\n  }\n  get items() {\n    return this.packingForm.get('items');\n  }\n  createItemGroup(item) {\n    return this.fb.group({\n      index: [item.index, Validators.required],\n      weight: [`${item.weight}kg`],\n      cost: [`€${item.cost}`]\n    });\n  }\n  addItem() {\n    const emptyItem = {\n      index: '',\n      name: '',\n      weight: 0,\n      cost: ''\n    };\n    this.items.push(this.createItemGroup(emptyItem));\n  }\n  removeItem(index) {\n    this.items.removeAt(index);\n  }\n  filterItemsByWeight(selectedWeight) {\n    this.filteredItems = this.itemsByWeight[selectedWeight] || [];\n  }\n  updateItemsByWeight() {\n    for (const weight of this.sampleParcelWeights) {\n      const items = this.availableItems.filter(item => item.weight === weight);\n      this.itemsByWeight[weight] = items.map(item => ({\n        value: item.index,\n        label: `${item.index}, ${item.name}`,\n        weight: `${item.weight}kg`,\n        cost: `€${item.cost}`\n      }));\n    }\n  }\n  submitForm() {\n    if (this.packingForm.valid) {\n      const formValue = this.packingForm.value;\n      console.log(formValue);\n    }\n  }\n  onWeightSelected() {\n    const weightLimit = this.packingForm.get('weightLimit')?.value;\n    const selectedItemIndex = this.packingForm.get('items')?.value[this.items.controls.length - 1]?.index;\n    if (weightLimit && selectedItemIndex !== null) {\n      const selectedItems = this.itemsByWeight[weightLimit];\n      const selectedItem = selectedItems.find(item => item.value === selectedItemIndex);\n      if (selectedItem) {\n        this.selectedItem = selectedItem;\n      }\n    }\n  }\n}\nPackingFormComponent.ɵfac = function PackingFormComponent_Factory(t) {\n  return new (t || PackingFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nPackingFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PackingFormComponent,\n  selectors: [[\"app-packing-form\"]],\n  inputs: {\n    parcelData: \"parcelData\",\n    availableItems: \"availableItems\",\n    sampleParcelWeights: \"sampleParcelWeights\"\n  },\n  decls: 23,\n  vars: 4,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-12\"], [1, \"d-flex\", \"justify-content-center\", \"mt-5\"], [\"src\", \"../../assets/logo.png\", \"alt\", \"App Logo\", 1, \"app-logo\"], [1, \"p-5\", \"packingForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-light\", \"mb-4\"], [1, \"form-group\"], [\"for\", \"weight\", 1, \"text-light\", \"my-2\"], [\"id\", \"weight\", \"formControlName\", \"weightLimit\", 1, \"form-control\", 3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"items\"], [\"class\", \"item-group\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-yellow\", \"py-2\", \"my-2\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-yellow\", \"mx-2\", \"py-2\", 3, \"disabled\"], [3, \"value\"], [1, \"item-group\", 3, \"formGroupName\"], [1, \"form-row\", \"w-50\", \"mt-4\"], [1, \"col\"], [\"for\", \"selectedItem\", 1, \"text-light\"], [\"formControlName\", \"index\", 1, \"form-control\", 3, \"change\"], [3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-light\"], [\"type\", \"text\", \"formControlName\", \"weight\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [1, \"input-group\"], [\"type\", \"text\", \"formControlName\", \"cost\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [1, \"d-flex\", \"justify-content-start\"], [\"type\", \"button\", 1, \"btn\", \"btn-yellow\", \"my-2\", 3, \"click\"]],\n  template: function PackingFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 2)(7, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function PackingFormComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(8, \"h2\", 6);\n      i0.ɵɵtext(9, \"Choose a Sample Shipping Box\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Weight\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"select\", 9);\n      i0.ɵɵlistener(\"change\", function PackingFormComponent_Template_select_change_13_listener() {\n        return ctx.onWeightSelected();\n      });\n      i0.ɵɵelementStart(14, \"option\", 10);\n      i0.ɵɵtext(15, \"-- Select Weight Limit --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, PackingFormComponent_option_16_Template, 2, 2, \"option\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 12);\n      i0.ɵɵtemplate(18, PackingFormComponent_div_18_Template, 22, 5, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function PackingFormComponent_Template_button_click_19_listener() {\n        return ctx.addItem();\n      });\n      i0.ɵɵtext(20, \"Add Item\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 15);\n      i0.ɵɵtext(22, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.packingForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.sampleParcelWeights);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items.controls);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.packingForm.valid || ctx.items.length === 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n  styles: [\".item-group[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.btn-danger[_ngcontent-%COMP%] {\\r\\n  margin-left: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFja2luZy1mb3JtL3BhY2tpbmctZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIuaXRlbS1ncm91cCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5idG4tZGFuZ2VyIHtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","Validators","i0","PackingFormComponent","constructor","fb","ngOnInit","initForm","updateItemsByWeight","packingForm","group","weightLimit","required","items","array","get","valueChanges","subscribe","selectedWeight","filterItemsByWeight","createItemGroup","item","index","weight","cost","addItem","emptyItem","name","push","removeItem","removeAt","filteredItems","itemsByWeight","sampleParcelWeights","availableItems","filter","map","value","label","submitForm","valid","formValue","console","log","onWeightSelected","selectedItemIndex","controls","length","selectedItems","selectedItem","find","selectors","inputs","parcelData","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\packing-form\\packing-form.component.ts","C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\packing-form\\packing-form.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Item } from '../interfaces/item.interface';\r\n\r\n@Component({\r\n  selector: 'app-packing-form',\r\n  templateUrl: './packing-form.component.html',\r\n  styleUrls: ['./packing-form.component.css']\r\n})\r\nexport class PackingFormComponent implements OnInit {\r\n  @Input() parcelData: any[] = [];\r\n  @Input() availableItems: Item[] = []; // Items fetched from the API\r\n  @Input() sampleParcelWeights: number[] = []; // Sample parcel weights fetched from the API\r\n\r\n  packingForm: FormGroup = new FormGroup({});\r\n  //selectedItems: { weight: number, items: Item[] }[] = [];\r\n  selectedItem: Item | null = null; // Update this line to store the selected item\r\n  itemsByWeight: Record<number, any[]> = {};\r\n  filteredItems: any[] = []; // New property for filtered items\r\n\r\n  constructor(private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    this.updateItemsByWeight();\r\n  }\r\n\r\n  initForm(): void {\r\n    this.packingForm = this.fb.group({\r\n      weightLimit: ['', Validators.required],\r\n      items: this.fb.array([])\r\n    });\r\n\r\n    this.packingForm.get('weightLimit')?.valueChanges.subscribe((selectedWeight) => {\r\n      this.filterItemsByWeight(selectedWeight);\r\n    });\r\n  }\r\n\r\n  get items(): FormArray {\r\n    return this.packingForm.get('items') as FormArray;\r\n  }\r\n\r\n  createItemGroup(item: Item): FormGroup {\r\n    return this.fb.group({\r\n      index: [item.index, Validators.required],\r\n      weight: [`${item.weight}kg`],\r\n      cost: [`€${item.cost}`]\r\n    });\r\n  }\r\n\r\n  addItem(): void {\r\n    const emptyItem: Item = { index: '', name: '', weight: 0, cost: '' };\r\n    this.items.push(this.createItemGroup(emptyItem));\r\n  }\r\n\r\n  removeItem(index: number): void {\r\n    this.items.removeAt(index);\r\n  }\r\n\r\n  filterItemsByWeight(selectedWeight: number): void {\r\n    this.filteredItems = this.itemsByWeight[selectedWeight] || [];\r\n  }\r\n\r\n  updateItemsByWeight(): void {\r\n    for (const weight of this.sampleParcelWeights) {\r\n      const items = this.availableItems.filter(item => item.weight === weight);\r\n\r\n      this.itemsByWeight[weight] = items.map((item) => ({\r\n        value: item.index,\r\n        label: `${item.index}, ${item.name}`,\r\n        weight: `${item.weight}kg`,\r\n        cost: `€${item.cost}`\r\n      }));\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    if (this.packingForm.valid) {\r\n      const formValue = this.packingForm.value;\r\n      console.log(formValue);\r\n    }\r\n  }\r\n\r\n  onWeightSelected(): void {\r\n    const weightLimit = this.packingForm.get('weightLimit')?.value;\r\n    const selectedItemIndex = this.packingForm.get('items')?.value[this.items.controls.length - 1]?.index;\r\n\r\n    if (weightLimit && selectedItemIndex !== null) {\r\n      const selectedItems = this.itemsByWeight[weightLimit];\r\n      const selectedItem = selectedItems.find(item => item.value === selectedItemIndex);\r\n\r\n      if (selectedItem) {\r\n        this.selectedItem = selectedItem;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"d-flex justify-content-center mt-5\">\r\n                <img src=\"../../assets/logo.png\" alt=\"App Logo\" class=\"app-logo\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <form class=\"p-5 packingForm\" [formGroup]=\"packingForm\" (ngSubmit)=\"submitForm()\">\r\n                <h2 class=\"text-light mb-4\">Choose a Sample Shipping Box</h2>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"weight\" class=\"text-light my-2\">Weight</label>\r\n                    <!-- Weight dropdown -->\r\n                    <select class=\"form-control\" id=\"weight\" formControlName=\"weightLimit\" (change)=\"onWeightSelected()\">\r\n                        <option value=\"\">-- Select Weight Limit --</option>\r\n                        <option *ngFor=\"let weightLimit of sampleParcelWeights\" [value]=\"weightLimit\">{{ weightLimit }}kg</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div formArrayName=\"items\">\r\n                    <div class=\"item-group\" *ngFor=\"let itemGroup of items.controls; let i = index\" [formGroupName]=\"i\">\r\n                        <div class=\"form-row w-50 mt-4\">\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"text-light\" for=\"selectedItem\">Select Item:</label>\r\n                                    <select class=\"form-control\" formControlName=\"index\" (change)=\"onWeightSelected()\">\r\n                                        <option [ngValue]=\"null\">-- Select Item --</option>\r\n                                        <option *ngFor=\"let option of itemsByWeight[packingForm.get('weightLimit')?.value]\" [ngValue]=\"option.value\">\r\n                                            {{ option.label }}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label class=\"text-light\">Weight</label>\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"weight\" [value]=\"selectedItem?.weight || ''\" readonly>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label class=\"text-light\">Cost</label>\r\n                                <div class=\"input-group\">\r\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"cost\" [value]=\"selectedItem?.cost || ''\" readonly>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"d-flex justify-content-start\">\r\n                                <button type=\"button\" class=\"btn btn-yellow my-2\" (click)=\"removeItem(i)\">Remove Item</button>\r\n                            </div>\r\n                        </div>\r\n                \r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" class=\"btn btn-yellow py-2 my-2\" (click)=\"addItem()\">Add Item</button>\r\n                <button type=\"submit\" [disabled]=\"!packingForm.valid || items.length === 0\" class=\"btn btn-yellow mx-2 py-2\">Submit</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}