{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ParcelDataService {\n  constructor(http) {\n    this.http = http;\n    this.APIUrl = 'https://gist.githubusercontent.com/Lynne88git/552c061f4ebe867b70f6bc2376653b02/raw/876ca05861ce3bed421e0970b24563dfdfeb7ca5/input.txt';\n  }\n  getWeights() {\n    return this.http.get(this.APIUrl);\n  }\n}\nParcelDataService.ɵfac = function ParcelDataService_Factory(t) {\n  return new (t || ParcelDataService)(i0.ɵɵinject(i1.HttpClient));\n};\nParcelDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ParcelDataService,\n  factory: ParcelDataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,uIAAuI;EAEhH;EAExCC,UAAU;IACR,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,IAAI,CAACC,MAAM,CAAC;EAC7C;;AAPWL,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAM,SAAjBN,iBAAiB;EAAAO,YAFhB;AAAM","names":["ParcelDataService","constructor","http","getWeights","get","APIUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\services\\parcel-data-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs'\r\nimport { Item } from '../interfaces/item.interface';\r\nimport { Parcel } from '../interfaces/parcel.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ParcelDataService {\r\n  private APIUrl = 'https://gist.githubusercontent.com/Lynne88git/552c061f4ebe867b70f6bc2376653b02/raw/876ca05861ce3bed421e0970b24563dfdfeb7ca5/input.txt';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getWeights(): Observable<string[]> {\r\n    return this.http.get<string[]>(this.APIUrl);\r\n  }\r\n\r\n  //fetchParcels(): Observable<Parcel[]> {\r\n  //  return this.http.get(this.APIUrl, { responseType: 'text' }).pipe(\r\n  //    map((data: string) => this.parseParcels(data)),\r\n  //    catchError((error: any) => {\r\n  //      console.error(error);\r\n  //      return of([]);\r\n  //    })\r\n  //  );\r\n  //}\r\n\r\n  //fetchSampleParcelWeights(): Observable<number[]> {\r\n  //  return this.fetchParcels().pipe(\r\n  //    map((parcels: Parcel[]) => {\r\n  //      const weights: number[] = [];\r\n  //      parcels.forEach((parcel: Parcel) => {\r\n  //        weights.push(parcel.sampleParcelWeight);\r\n  //      });\r\n  //      return weights;\r\n  //    }),\r\n  //    catchError((error: any) => {\r\n  //      console.error(error);\r\n  //      return of([]);\r\n  //    })\r\n  //  );\r\n  //}\r\n\r\n  //fetchItemsByWeight(weight: number): Observable<Item[]> {\r\n  //  return this.fetchParcels().pipe(\r\n  //    map((parcels: Parcel[]) => {\r\n  //      const items: Item[] = [];\r\n  //      parcels.forEach((parcel: Parcel) => {\r\n  //        if (parcel.sampleParcelWeight === weight) {\r\n  //          items.push(...parcel.items);\r\n  //        }\r\n  //      });\r\n  //      return items;\r\n  //    }),\r\n  //    catchError((error: any) => {\r\n  //      console.error(error);\r\n  //      return of([]);\r\n  //    })\r\n  //  );\r\n  //}\r\n\r\n  //private parseParcels(data: string): Parcel[] {\r\n  //  const parcelLines = data.split('\\n');\r\n  //  const parcels: Parcel[] = [];\r\n\r\n  //  for (const parcelLine of parcelLines) {\r\n  //    const parcelData = parcelLine.trim().split(' : ');\r\n  //    const parcelId = Number(parcelData[0]);\r\n  //    const itemData = parcelData[1].split(') ');\r\n\r\n  //    const items: Item[] = [];\r\n\r\n  //    for (const itemString of itemData) {\r\n  //      const itemInfo = itemString.substring(itemString.indexOf('(') + 1).split(', ');\r\n  //      const itemId = Number(itemInfo[0]);\r\n  //      const itemName = itemInfo[1];\r\n  //      const itemWeight = parseFloat(itemInfo[2]);\r\n  //      const itemPrice = parseFloat(itemInfo[3].replace('€', ''));\r\n\r\n  //      const item: Item = {\r\n  //        index: itemId.toString(),\r\n  //        name: itemName,\r\n  //        weight: itemWeight,\r\n  //        cost: itemPrice\r\n  //      };\r\n\r\n  //      items.push(item);\r\n  //    }\r\n\r\n  //    const sampleParcelWeight = items.reduce((totalWeight, item) => totalWeight + item.weight, 0);\r\n\r\n  //    const parcel: Parcel = {\r\n  //      id: parcelId,\r\n  //      sampleParcelWeight: sampleParcelWeight,\r\n  //      items: items\r\n  //    };\r\n\r\n  //    parcels.push(parcel);\r\n  //  }\r\n\r\n  //  return parcels;\r\n  //}\r\n\r\n  //fetchItems(): Promise<Item[]> {\r\n  //  // Fetch the items from the API and return them\r\n  //  // Replace this with your actual API call or data retrieval logic\r\n  //  return this.http.get<Item[]>('https://api.example.com/items').toPromise();\r\n  //}\r\n\r\n  //fetchParcelWeights(): Promise<number[]> {\r\n  //  // Fetch the parcel weights from the API and return them\r\n  //  // Replace this with your actual API call or data retrieval logic\r\n  //  return this.http.get<number[]>('https://api.example.com/parcel-weights').toPromise();\r\n  //}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}