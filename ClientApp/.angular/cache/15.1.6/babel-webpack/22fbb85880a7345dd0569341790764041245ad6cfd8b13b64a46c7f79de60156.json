{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FetchParcelDataComponent {\n  constructor(http, baseUrl) {\n    this.parcels = [];\n    http.get(baseUrl + 'parcel').subscribe(result => {\n      this.parcels = result;\n    }, error => console.error(error));\n  }\n}\nFetchParcelDataComponent.ɵfac = function FetchParcelDataComponent_Factory(t) {\n  return new (t || FetchParcelDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchParcelDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchParcelDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 0,\n  vars: 0,\n  template: function FetchParcelDataComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,wBAAwB;EAGnCC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,YAAO,GAAa,EAAE;IAG3BD,IAAI,CAACE,GAAG,CAAWD,OAAO,GAAG,QAAQ,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MACxD,IAAI,CAACC,OAAO,GAAGD,MAAM;IACvB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAPWR,wBAAwB;mBAAxBA,wBAAwB,4DAGG,UAAU;AAAA;AAHrCA,wBAAwB;QAAxBA,wBAAwB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["FetchParcelDataComponent","constructor","http","baseUrl","get","subscribe","result","parcels","error","console","selectors","decls","vars","template","encapsulation"],"sourceRoot":"","sources":["C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\fetchParcelData\\fetchParcelData.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Parcel } from '../interfaces/parcel.interface';\r\nimport { Item } from '../interfaces/item.interface'\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetchParcelData.component.html'\r\n})\r\nexport class FetchParcelDataComponent {\r\n  public parcels: Parcel[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<Parcel[]>(baseUrl + 'parcel').subscribe(result => {\r\n      this.parcels = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}