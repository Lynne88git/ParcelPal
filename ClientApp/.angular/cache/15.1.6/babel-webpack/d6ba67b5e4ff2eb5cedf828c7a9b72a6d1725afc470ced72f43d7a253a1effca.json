{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction PackingFormComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const weight_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", weight_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(weight_r3);\n  }\n}\nfunction PackingFormComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 19);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PackingFormComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 21)(2, \"div\", 22)(3, \"label\", 23);\n    i0.ɵɵtext(4, \"Index\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 22)(7, \"label\", 23);\n    i0.ɵɵtext(8, \"Weight\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 22)(11, \"label\", 23);\n    i0.ɵɵtext(12, \"Cost\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 26)(14, \"div\", 27)(15, \"span\", 28);\n    i0.ɵɵtext(16, \"\\u20AC\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(17, \"input\", 29);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function PackingFormComponent_div_22_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const i_r5 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.removeItem(i_r5));\n    });\n    i0.ɵɵtext(19, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r5 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r5);\n  }\n}\nexport class PackingFormComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n    this.packingForm = new FormGroup({});\n    this.sampleWeights = [];\n    this.allItems = [];\n  }\n  ngOnInit() {\n    this.initForm();\n    this.loadSampleWeights();\n    this.loadAllItems();\n  }\n  initForm() {\n    this.packingForm = this.fb.group({\n      weightLimit: ['', [Validators.required, Validators.max(100)]],\n      items: this.fb.array([]),\n      customWeight: ['', [Validators.required, this.customWeightValidator]]\n    });\n  }\n  get items() {\n    return this.packingForm.get('items');\n  }\n  customWeightValidator(control) {\n    const value = control.value;\n    if (value && (value > 100 || isNaN(value))) {\n      return {\n        maxWeight: true\n      };\n    }\n    return null;\n  }\n  addItem(item) {\n    const itemGroup = this.fb.group({\n      index: [item ? item.index : '', Validators.required],\n      weight: [item ? item.weight : '', Validators.required],\n      cost: [item ? item.cost : '', Validators.required],\n      customWeight: ['', [Validators.required, this.customWeightValidator]]\n    });\n    this.items.push(itemGroup);\n  }\n  removeItem(index) {\n    this.items.removeAt(index);\n  }\n  submitForm() {\n    if (this.packingForm.valid) {\n      const formValue = this.packingForm.value;\n      console.log(formValue);\n    }\n  }\n  loadSampleWeights() {\n    const filePath = 'assets/input.txt';\n    this.http.get(filePath, {\n      responseType: 'text'\n    }).subscribe(response => {\n      const weights = this.extractWeights(response);\n      this.sampleWeights = weights; // Assign the sample weights from the API response\n    }, error => {\n      console.error(error);\n    });\n  }\n  extractWeights(data) {\n    const lines = data.split('\\n');\n    const weights = [];\n    for (const line of lines) {\n      const weight = parseFloat(line.trim());\n      if (!isNaN(weight)) {\n        weights.push(weight);\n      }\n    }\n    return weights;\n  }\n  loadAllItems() {\n    const filePath = 'assets/input.txt';\n    this.http.get(filePath, {\n      responseType: 'text'\n    }).subscribe(response => {\n      const items = this.extractItems(response);\n      for (const item of items) {\n        this.addItem(item);\n      }\n    }, error => {\n      console.error(error);\n    });\n  }\n  extractItems(data) {\n    const lines = data.split('\\n');\n    const items = [];\n    for (const line of lines) {\n      const values = line.split(',');\n      if (values.length === 3) {\n        const item = {\n          index: parseInt(values[0].trim()),\n          weight: parseFloat(values[1].trim()),\n          cost: parseFloat(values[2].trim())\n        };\n        items.push(item);\n      }\n    }\n    return items;\n  }\n  filterItemsByWeight() {\n    const selectedWeight = parseFloat(this.packingForm.get('weightLimit')?.value);\n    // Clear existing items\n    while (this.items.length !== 0) {\n      this.items.removeAt(0);\n    }\n    // Filter items based on selected weight\n    const filteredItems = this.allItems.filter(item => item.weight <= selectedWeight);\n    // Log the filtered items\n    console.log('Filtered Items:', filteredItems);\n    // Add filtered items to the form\n    for (const item of filteredItems) {\n      this.addItem(item);\n    }\n  }\n}\nPackingFormComponent.ɵfac = function PackingFormComponent_Factory(t) {\n  return new (t || PackingFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nPackingFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PackingFormComponent,\n  selectors: [[\"app-packing-form\"]],\n  decls: 27,\n  vars: 5,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-12\"], [1, \"d-flex\", \"justify-content-center\", \"mt-5\"], [\"src\", \"../../assets/logo.png\", \"alt\", \"App Logo\", 1, \"app-logo\"], [1, \"p-5\", \"packingForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-light\", \"mb-4\"], [1, \"form-group\"], [\"for\", \"weight\", 1, \"text-light\", \"my-2\"], [\"id\", \"weight\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"custom\"], [4, \"ngIf\"], [\"for\", \"items\", 1, \"text-light\", \"mt-2\"], [\"formArrayName\", \"items\"], [\"class\", \"item-group\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-yellow\", \"py-2\", \"my-2\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-yellow\", 3, \"disabled\"], [3, \"value\"], [\"type\", \"number\", \"formControlName\", \"customWeight\", \"min\", \"1\", \"max\", \"100\", \"placeholder\", \"Enter a custom weight between 1 and 100\", 1, \"form-control\", \"mt-2\"], [1, \"item-group\", 3, \"formGroupName\"], [1, \"form-row\"], [1, \"col\"], [1, \"text-light\"], [\"type\", \"number\", \"formControlName\", \"index\", \"placeholder\", \"Index\", 1, \"form-control\"], [\"type\", \"number\", \"formControlName\", \"weight\", \"placeholder\", \"Weight\", 1, \"form-control\"], [1, \"input-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\"], [\"type\", \"number\", \"formControlName\", \"cost\", \"placeholder\", \"Cost\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-yellow\", 3, \"click\"]],\n  template: function PackingFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 2)(7, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function PackingFormComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(8, \"h2\", 6);\n      i0.ɵɵtext(9, \"Enter Parcel Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Weight\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"select\", 9);\n      i0.ɵɵtemplate(14, PackingFormComponent_option_14_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementStart(15, \"option\", 11);\n      i0.ɵɵtext(16, \"Enter Custom Weight\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(17, PackingFormComponent_div_17_Template, 2, 0, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 7)(19, \"label\", 13);\n      i0.ɵɵtext(20, \"Items:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 14);\n      i0.ɵɵtemplate(22, PackingFormComponent_div_22_Template, 20, 1, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function PackingFormComponent_Template_button_click_23_listener() {\n        return ctx.addItem();\n      });\n      i0.ɵɵtext(24, \"Add Item\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"button\", 17);\n      i0.ɵɵtext(26, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.packingForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.sampleWeights);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.packingForm.get(\"weightLimit\")) == null ? null : tmp_2_0.value) === \"custom\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items.controls);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.packingForm.valid);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.MaxValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n  styles: [\".item-group[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.btn-danger[_ngcontent-%COMP%] {\\r\\n  margin-left: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFja2luZy1mb3JtL3BhY2tpbmctZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIuaXRlbS1ncm91cCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5idG4tZGFuZ2VyIHtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,SAAS,EAAEC,UAAU,QAA2C,gBAAgB;;;;;;;ICezFC,kCAA8D;IAAAA,YAAY;IAAAA,iBAAS;;;;IAAtCA,iCAAgB;IAACA,eAAY;IAAZA,+BAAY;;;;;IAG9EA,2BAAgE;IAC5DA,4BAAsJ;IAC1JA,iBAAM;;;;;;IAMFA,+BAA+F;IAGzDA,qBAAK;IAAAA,iBAAQ;IACvCA,4BAAsF;IAC1FA,iBAAM;IACNA,+BAAiB;IACaA,sBAAM;IAAAA,iBAAQ;IACxCA,4BAAwF;IAC5FA,iBAAM;IACNA,gCAAiB;IACaA,qBAAI;IAAAA,iBAAQ;IACtCA,gCAAyB;IAEcA,uBAAC;IAAAA,iBAAO;IAE3CA,6BAAoF;IACxFA,iBAAM;IAGdA,mCAAqE;IAA/CA;MAAA;MAAA;MAAA;MAAA,OAASA,sCAAa;IAAA,EAAC;IAAwBA,uBAAM;IAAAA,iBAAS;;;;IApBhCA,oCAAmB;;;ADnBnG,OAAM,MAAOC,oBAAoB;EAI/BC,YAAoBC,EAAe,EAAUC,IAAgB;IAAzC,OAAE,GAAFD,EAAE;IAAuB,SAAI,GAAJC,IAAI;IAHjD,gBAAW,GAAc,IAAIN,SAAS,CAAC,EAAE,CAAC;IAC1C,kBAAa,GAAa,EAAE;IAC5B,aAAQ,GAAU,EAAE;EAC6C;EAEjEO,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,iBAAiB,EAAE;IACxB,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAF,QAAQ;IACN,IAAI,CAACG,WAAW,GAAG,IAAI,CAACN,EAAE,CAACO,KAAK,CAAC;MAC/BC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACc,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7DC,KAAK,EAAE,IAAI,CAACX,EAAE,CAACY,KAAK,CAAC,EAAE,CAAC;MACxBC,YAAY,EAAE,CAAC,EAAE,EAAE,CAACjB,UAAU,CAACa,QAAQ,EAAE,IAAI,CAACK,qBAAqB,CAAC;KACrE,CAAC;EACJ;EACA,IAAIH,KAAK;IACP,OAAO,IAAI,CAACL,WAAW,CAACS,GAAG,CAAC,OAAO,CAAc;EACnD;EAEAD,qBAAqB,CAACE,OAAwB;IAC5C,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;IAC3B,IAAIA,KAAK,KAAKA,KAAK,GAAG,GAAG,IAAIC,KAAK,CAACD,KAAK,CAAC,CAAC,EAAE;MAC1C,OAAO;QAAEE,SAAS,EAAE;MAAI,CAAE;;IAE5B,OAAO,IAAI;EACb;EAEAC,OAAO,CAACC,IAAU;IAChB,MAAMC,SAAS,GAAG,IAAI,CAACtB,EAAE,CAACO,KAAK,CAAC;MAC9BgB,KAAK,EAAE,CAACF,IAAI,GAAGA,IAAI,CAACE,KAAK,GAAG,EAAE,EAAE3B,UAAU,CAACa,QAAQ,CAAC;MACpDe,MAAM,EAAE,CAACH,IAAI,GAAGA,IAAI,CAACG,MAAM,GAAG,EAAE,EAAE5B,UAAU,CAACa,QAAQ,CAAC;MACtDgB,IAAI,EAAE,CAACJ,IAAI,GAAGA,IAAI,CAACI,IAAI,GAAG,EAAE,EAAE7B,UAAU,CAACa,QAAQ,CAAC;MAClDI,YAAY,EAAE,CAAC,EAAE,EAAE,CAACjB,UAAU,CAACa,QAAQ,EAAE,IAAI,CAACK,qBAAqB,CAAC;KACrE,CAAC;IAEF,IAAI,CAACH,KAAK,CAACe,IAAI,CAACJ,SAAS,CAAC;EAC5B;EAEAK,UAAU,CAACJ,KAAa;IACtB,IAAI,CAACZ,KAAK,CAACiB,QAAQ,CAACL,KAAK,CAAC;EAC5B;EAEAM,UAAU;IACR,IAAI,IAAI,CAACvB,WAAW,CAACwB,KAAK,EAAE;MAC1B,MAAMC,SAAS,GAAG,IAAI,CAACzB,WAAW,CAACW,KAAK;MACxCe,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;;EAE1B;EAEA3B,iBAAiB;IACf,MAAM8B,QAAQ,GAAG,kBAAkB;IACnC,IAAI,CAACjC,IAAI,CAACc,GAAG,CAACmB,QAAQ,EAAE;MAAEC,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,SAAS,CACxDC,QAAQ,IAAI;MACX,MAAMC,OAAO,GAAG,IAAI,CAACC,cAAc,CAACF,QAAQ,CAAC;MAC9C,IAAI,CAACG,aAAa,GAAGF,OAAO,CAAC,CAAC;IAC/B,CAAC,EACAG,KAAK,IAAI;MACRT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;EAEAF,cAAc,CAACG,IAAY;IACzB,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;IAC9B,MAAMN,OAAO,GAAa,EAAE;IAC5B,KAAK,MAAMO,IAAI,IAAIF,KAAK,EAAE;MACxB,MAAMnB,MAAM,GAAGsB,UAAU,CAACD,IAAI,CAACE,IAAI,EAAE,CAAC;MACtC,IAAI,CAAC7B,KAAK,CAACM,MAAM,CAAC,EAAE;QAClBc,OAAO,CAACZ,IAAI,CAACF,MAAM,CAAC;;;IAGxB,OAAOc,OAAO;EAChB;EAEAjC,YAAY;IACV,MAAM6B,QAAQ,GAAG,kBAAkB;IACnC,IAAI,CAACjC,IAAI,CAACc,GAAG,CAACmB,QAAQ,EAAE;MAAEC,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,SAAS,CACxDC,QAAQ,IAAI;MACX,MAAM1B,KAAK,GAAG,IAAI,CAACqC,YAAY,CAACX,QAAQ,CAAC;MACzC,KAAK,MAAMhB,IAAI,IAAIV,KAAK,EAAE;QACxB,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC;;IAEtB,CAAC,EACAoB,KAAK,IAAI;MACRT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;EAEAO,YAAY,CAACN,IAAY;IACvB,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;IAC9B,MAAMjC,KAAK,GAAU,EAAE;IACvB,KAAK,MAAMkC,IAAI,IAAIF,KAAK,EAAE;MACxB,MAAMM,MAAM,GAAGJ,IAAI,CAACD,KAAK,CAAC,GAAG,CAAC;MAC9B,IAAIK,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;QACvB,MAAM7B,IAAI,GAAG;UACXE,KAAK,EAAE4B,QAAQ,CAACF,MAAM,CAAC,CAAC,CAAC,CAACF,IAAI,EAAE,CAAC;UACjCvB,MAAM,EAAEsB,UAAU,CAACG,MAAM,CAAC,CAAC,CAAC,CAACF,IAAI,EAAE,CAAC;UACpCtB,IAAI,EAAEqB,UAAU,CAACG,MAAM,CAAC,CAAC,CAAC,CAACF,IAAI,EAAE;SAClC;QACDpC,KAAK,CAACe,IAAI,CAACL,IAAI,CAAC;;;IAGpB,OAAOV,KAAK;EACd;EAEAyC,mBAAmB;IACjB,MAAMC,cAAc,GAAGP,UAAU,CAAC,IAAI,CAACxC,WAAW,CAACS,GAAG,CAAC,aAAa,CAAC,EAAEE,KAAK,CAAC;IAE7E;IACA,OAAO,IAAI,CAACN,KAAK,CAACuC,MAAM,KAAK,CAAC,EAAE;MAC9B,IAAI,CAACvC,KAAK,CAACiB,QAAQ,CAAC,CAAC,CAAC;;IAGxB;IACA,MAAM0B,aAAa,GAAG,IAAI,CAACC,QAAQ,CAACC,MAAM,CAACnC,IAAI,IAAIA,IAAI,CAACG,MAAM,IAAI6B,cAAc,CAAC;IAEjF;IACArB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEqB,aAAa,CAAC;IAE7C;IACA,KAAK,MAAMjC,IAAI,IAAIiC,aAAa,EAAE;MAChC,IAAI,CAAClC,OAAO,CAACC,IAAI,CAAC;;EAEtB;;AAhIWvB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA2D;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTjChE,8BAA6B;MAIbA,yBAAiE;MACrEA,iBAAM;MAIdA,8BAAiB;MAE+CA;QAAA,OAAYiE,gBAAY;MAAA,EAAC;MAC7EjE,6BAA4B;MAAAA,oCAAoB;MAAAA,iBAAK;MAErDA,+BAAwB;MACwBA,uBAAM;MAAAA,iBAAQ;MAC1DA,kCAAyC;MACrCA,8EAAmF;MACnFA,mCAAuB;MAAAA,oCAAmB;MAAAA,iBAAS;MAEvDA,wEAEM;MACVA,iBAAM;MAENA,+BAAwB;MACuBA,uBAAM;MAAAA,iBAAQ;MACzDA,gCAA2B;MACvBA,yEAqBM;MACVA,iBAAM;MACNA,mCAA2E;MAArDA;QAAA,OAASiE,aAAS;MAAA,EAAC;MAAkCjE,yBAAQ;MAAAA,iBAAS;MAGhGA,mCAA6E;MAAAA,uBAAM;MAAAA,iBAAS;;;;MA3ClEA,eAAyB;MAAzBA,2CAAyB;MAMhBA,eAAgB;MAAhBA,2CAAgB;MAGzCA,eAAwD;MAAxDA,mHAAwD;MAQpCA,eAAmB;MAAnBA,4CAAmB;MA0B3BA,eAA+B;MAA/BA,iDAA+B","names":["FormGroup","Validators","i0","PackingFormComponent","constructor","fb","http","ngOnInit","initForm","loadSampleWeights","loadAllItems","packingForm","group","weightLimit","required","max","items","array","customWeight","customWeightValidator","get","control","value","isNaN","maxWeight","addItem","item","itemGroup","index","weight","cost","push","removeItem","removeAt","submitForm","valid","formValue","console","log","filePath","responseType","subscribe","response","weights","extractWeights","sampleWeights","error","data","lines","split","line","parseFloat","trim","extractItems","values","length","parseInt","filterItemsByWeight","selectedWeight","filteredItems","allItems","filter","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\packing-form\\packing-form.component.ts","C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\packing-form\\packing-form.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\r\n\n@Component({\n  selector: 'app-packing-form',\n  templateUrl: './packing-form.component.html',\n  styleUrls: ['./packing-form.component.css']\n})\nexport class PackingFormComponent implements OnInit {\n  packingForm: FormGroup = new FormGroup({});\n  sampleWeights: number[] = [];\n  allItems: any[] = [];\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    this.loadSampleWeights();\n    this.loadAllItems();\n  }\n\n  initForm(): void {\n    this.packingForm = this.fb.group({\n      weightLimit: ['', [Validators.required, Validators.max(100)]],\n      items: this.fb.array([]),\n      customWeight: ['', [Validators.required, this.customWeightValidator]]\n    });\n  }\n  get items(): FormArray {\n    return this.packingForm.get('items') as FormArray;\n  }\n\n  customWeightValidator(control: AbstractControl): ValidationErrors | null {\r\n    const value = control.value;\r\n    if (value && (value > 100 || isNaN(value))) {\r\n      return { maxWeight: true };\r\n    }\r\n    return null;\r\n  }\n\n  addItem(item?: any): void {\n    const itemGroup = this.fb.group({\n      index: [item ? item.index : '', Validators.required],\n      weight: [item ? item.weight : '', Validators.required],\n      cost: [item ? item.cost : '', Validators.required],\n      customWeight: ['', [Validators.required, this.customWeightValidator]]\n    });\n\n    this.items.push(itemGroup);\n  }\n\n  removeItem(index: number): void {\n    this.items.removeAt(index);\n  }\n\n  submitForm(): void {\n    if (this.packingForm.valid) {\n      const formValue = this.packingForm.value;\n      console.log(formValue);\n    }\n  }\n\n  loadSampleWeights(): void {\n    const filePath = 'assets/input.txt';\n    this.http.get(filePath, { responseType: 'text' }).subscribe(\n      (response) => {\n        const weights = this.extractWeights(response);\n       this.sampleWeights = weights; // Assign the sample weights from the API response\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  extractWeights(data: string): number[] {\n    const lines = data.split('\\n');\n    const weights: number[] = [];\n    for (const line of lines) {\n      const weight = parseFloat(line.trim());\n      if (!isNaN(weight)) {\n        weights.push(weight);\n      }\n    }\n    return weights;\n  }\n\n  loadAllItems(): void {\r\n    const filePath = 'assets/input.txt';\r\n    this.http.get(filePath, { responseType: 'text' }).subscribe(\r\n      (response) => {\r\n        const items = this.extractItems(response);\r\n        for (const item of items) {\r\n          this.addItem(item);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\n\n  extractItems(data: string): any[] {\r\n    const lines = data.split('\\n');\r\n    const items: any[] = [];\r\n    for (const line of lines) {\r\n      const values = line.split(',');\r\n      if (values.length === 3) {\r\n        const item = {\r\n          index: parseInt(values[0].trim()),\r\n          weight: parseFloat(values[1].trim()),\r\n          cost: parseFloat(values[2].trim())\r\n        };\r\n        items.push(item);\r\n      }\r\n    }\r\n    return items;\r\n  }\r\n\r\n  filterItemsByWeight(): void {\r\n    const selectedWeight = parseFloat(this.packingForm.get('weightLimit')?.value);\r\n\r\n    // Clear existing items\r\n    while (this.items.length !== 0) {\r\n      this.items.removeAt(0);\r\n    }\r\n\r\n    // Filter items based on selected weight\r\n    const filteredItems = this.allItems.filter(item => item.weight <= selectedWeight);\r\n\r\n    // Log the filtered items\r\n    console.log('Filtered Items:', filteredItems);\r\n\r\n    // Add filtered items to the form\r\n    for (const item of filteredItems) {\r\n      this.addItem(item);\r\n    }\r\n  }\n}\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"d-flex justify-content-center mt-5\">\r\n                <img src=\"../../assets/logo.png\" alt=\"App Logo\" class=\"app-logo\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <form class=\"p-5 packingForm\" [formGroup]=\"packingForm\" (ngSubmit)=\"submitForm()\">\r\n                <h2 class=\"text-light mb-4\">Enter Parcel Details</h2>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"weight\" class=\"text-light my-2\">Weight</label>\r\n                    <select class=\"form-control\" id=\"weight\">\r\n                        <option *ngFor=\"let weight of sampleWeights\" [value]=\"weight\">{{ weight }}</option>\r\n                        <option value=\"custom\">Enter Custom Weight</option>\r\n                    </select>\r\n                    <div *ngIf=\"packingForm.get('weightLimit')?.value === 'custom'\">\r\n                        <input type=\"number\" class=\"form-control mt-2\" formControlName=\"customWeight\" min=\"1\" max=\"100\" placeholder=\"Enter a custom weight between 1 and 100\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"items\" class=\"text-light mt-2\">Items:</label>\r\n                    <div formArrayName=\"items\">\r\n                        <div *ngFor=\"let item of items.controls; let i = index\" [formGroupName]=\"i\" class=\"item-group\">\r\n                            <div class=\"form-row\">\r\n                                <div class=\"col\">\r\n                                    <label class=\"text-light\">Index</label>\r\n                                    <input type=\"number\" formControlName=\"index\" class=\"form-control\" placeholder=\"Index\">\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label class=\"text-light\">Weight</label>\r\n                                    <input type=\"number\" formControlName=\"weight\" class=\"form-control\" placeholder=\"Weight\">\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label class=\"text-light\">Cost</label>\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\">€</span>\r\n                                        </div>\r\n                                        <input type=\"number\" formControlName=\"cost\" class=\"form-control\" placeholder=\"Cost\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <button type=\"button\" (click)=\"removeItem(i)\" class=\"btn btn-yellow\">Remove</button>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" (click)=\"addItem()\" class=\"btn btn-yellow py-2 my-2\">Add Item</button>\r\n                </div>\r\n\r\n                <button type=\"submit\" [disabled]=\"!packingForm.valid\" class=\"btn btn-yellow\">Submit</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}