{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/parcel-data-service\";\nimport * as i2 from \"../packing-form/packing-form.component\";\nexport class FetchParcelDataComponent {\n  constructor(parcelDataService) {\n    this.parcelDataService = parcelDataService;\n    this.parcels = [];\n    this.availableItems = []; // Items fetched from the API\n    this.sampleParcelWeights = []; // Sample parcel weights fetched from the API\n    this.parsedItems = [];\n    this.parsedParcelWeights = [];\n  }\n  ngOnInit() {\n    this.fetchData();\n  }\n  fetchData() {\n    this.parcelDataService.fetchParcels().subscribe(parcels => {\n      this.parcels = parcels;\n      // Other logic to handle the fetched parcels\n    }, error => {\n      console.error(error);\n    });\n  }\n}\nFetchParcelDataComponent.ɵfac = function FetchParcelDataComponent_Factory(t) {\n  return new (t || FetchParcelDataComponent)(i0.ɵɵdirectiveInject(i1.ParcelDataService));\n};\nFetchParcelDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchParcelDataComponent,\n  selectors: [[\"app-fetch-parcel-data\"]],\n  decls: 1,\n  vars: 2,\n  consts: [[3, \"availableItems\", \"sampleParcelWeights\"]],\n  template: function FetchParcelDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-packing-form\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"availableItems\", ctx.parsedItems)(\"sampleParcelWeights\", ctx.parsedParcelWeights);\n    }\n  },\n  dependencies: [i2.PackingFormComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,wBAAwB;EAOnCC,YAAoBC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IAN9B,YAAO,GAAa,EAAE;IACtB,mBAAc,GAAW,EAAE,CAAC,CAAC;IAC7B,wBAAmB,GAAa,EAAE,CAAC,CAAC;IACpC,gBAAW,GAAW,EAAE;IACxB,wBAAmB,GAAa,EAAE;EAEmB;EAG5DC,QAAQ;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEQA,SAAS;IACf,IAAI,CAACF,iBAAiB,CAACG,YAAY,EAAE,CAACC,SAAS,CAC5CC,OAAiB,IAAI;MACpB,IAAI,CAACA,OAAO,GAAGA,OAAO;MACtB;IACF,CAAC,EACAC,KAAU,IAAI;MACbC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;;AAxBWR,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVrCC,sCAAgH;;;MAA9FA,gDAA8B","names":["FetchParcelDataComponent","constructor","parcelDataService","ngOnInit","fetchData","fetchParcels","subscribe","parcels","error","console","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\components\\fetch-parcel-data\\fetch-parcel-data.component.ts","C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\components\\fetch-parcel-data\\fetch-parcel-data.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Parcel } from '../../interfaces/parcel.interface'\r\nimport { Item } from '../../interfaces/item.interface';\r\nimport { ParcelDataService } from '../../services/parcel-data-service';\r\n\r\n@Component({\r\n  selector: 'app-fetch-parcel-data',\r\n  templateUrl: './fetch-parcel-data.component.html',\r\n  styleUrls: ['./fetch-parcel-data.component.css']\r\n})\r\nexport class FetchParcelDataComponent implements OnInit {\r\n  public parcels: Parcel[] = [];\r\n  public availableItems: Item[] = []; // Items fetched from the API\r\n  public sampleParcelWeights: number[] = []; // Sample parcel weights fetched from the API\r\n  public parsedItems: Item[] = [];\r\n  public parsedParcelWeights: number[] = [];\r\n\r\n  constructor(private parcelDataService: ParcelDataService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.fetchData();\r\n  }\r\n\r\n  private fetchData(): void {\r\n    this.parcelDataService.fetchParcels().subscribe(\r\n      (parcels: Parcel[]) => {\r\n        this.parcels = parcels;\r\n        // Other logic to handle the fetched parcels\r\n      },\r\n      (error: any) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  //private parseParcels(data: string): void {\r\n  //  const lines = data.split('\\n');\r\n  //  const parsedItems: Item[] = [];\r\n  //  const parsedParcelWeights: number[] = [];\r\n\r\n  //  for (const line of lines) {\r\n  //    const [idStr, itemsStr] = line.split(':');\r\n  //    const id = parseInt(idStr.trim());\r\n  //    const items = itemsStr\r\n  //      .trim()\r\n  //      .split('(')\r\n  //      .slice(1)\r\n  //      .filter((item: string) => item.trim() !== '')\r\n  //      .map((item: string) => {\r\n  //        const [index, name, weightStr, costStr] = item\r\n  //          .replace(')', '')\r\n  //          .split(',')\r\n  //          .map((value: string) => value.trim());\r\n  //        const weight = parseFloat(weightStr);\r\n  //        const cost = parseFloat(costStr.replace('€', ''));\r\n  //        return {\r\n  //          index: index,\r\n  //          name: name,\r\n  //          weight: weight,\r\n  //          cost: cost\r\n  //        } as Item;\r\n  //      });\r\n\r\n  //    parsedItems.push(...items);\r\n  //    parsedParcelWeights.push(id);\r\n\r\n  //    console.log(`Items for Parcel ID ${id}:`);\r\n  //    for (const item of items) {\r\n  //      console.log(`Index: ${item.index}`);\r\n  //      console.log(`Name: ${item.name}`);\r\n  //      console.log(`Weight: ${item.weight}`);\r\n  //      console.log(`Cost: ${item.cost}`);\r\n  //      console.log('   ');\r\n  //    }\r\n  //  }\r\n\r\n  //  this.parsedItems = parsedItems;\r\n  //  this.parsedParcelWeights = parsedParcelWeights;\r\n  //  console.log(parsedItems)\r\n  //  console.log(parsedParcelWeights)\r\n  //}\r\n\r\n\r\n}\r\n","<app-packing-form [availableItems]=\"parsedItems\" [sampleParcelWeights]=\"parsedParcelWeights\"></app-packing-form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}