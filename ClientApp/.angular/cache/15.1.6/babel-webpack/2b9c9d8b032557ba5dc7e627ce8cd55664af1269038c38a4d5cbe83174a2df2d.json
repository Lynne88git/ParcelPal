{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/parcel-data-service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction PackingFormComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const weightLimit_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", weightLimit_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", weightLimit_r2, \"kg\");\n  }\n}\nfunction PackingFormComponent_div_18_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", option_r6.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r6.label, \" \");\n  }\n}\nfunction PackingFormComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"div\", 19)(3, \"div\", 7)(4, \"label\", 20);\n    i0.ɵɵtext(5, \"Select Item:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"select\", 21);\n    i0.ɵɵlistener(\"change\", function PackingFormComponent_div_18_Template_select_change_6_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onWeightSelected());\n    });\n    i0.ɵɵelementStart(7, \"option\", 22);\n    i0.ɵɵtext(8, \"-- Select Item --\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, PackingFormComponent_div_18_option_9_Template, 2, 2, \"option\", 23);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 19)(11, \"label\", 24);\n    i0.ɵɵtext(12, \"Weight\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 19)(15, \"label\", 24);\n    i0.ɵɵtext(16, \"Cost\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 26);\n    i0.ɵɵelement(18, \"input\", 27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 28)(20, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function PackingFormComponent_div_18_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const i_r4 = restoredCtx.index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.removeItem(i_r4));\n    });\n    i0.ɵɵtext(21, \"Remove Item\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const i_r4 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    i0.ɵɵproperty(\"formGroupName\", i_r4);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngValue\", null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.itemsByWeight[(tmp_2_0 = ctx_r1.packingForm.get(\"weightLimit\")) == null ? null : tmp_2_0.value]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", (ctx_r1.selectedItem == null ? null : ctx_r1.selectedItem.weight) || \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"value\", (ctx_r1.selectedItem == null ? null : ctx_r1.selectedItem.cost) || \"\");\n  }\n}\nexport class PackingFormComponent {\n  constructor(parcelDataService, formBuilder) {\n    this.parcelDataService = parcelDataService;\n    this.formBuilder = formBuilder;\n    this.sampleParcelWeights = []; // Sample parcel weights fetched from the API\n    this.itemsByWeight = {}; // Items grouped by weight\n    this.packingForm = this.formBuilder.group({\n      weightLimit: [''],\n      items: this.formBuilder.array([])\n    });\n  }\n  ngOnInit() {\n    this.fetchSampleParcelWeights();\n    this.fetchItemsByWeight();\n  }\n  fetchSampleParcelWeights() {\n    this.parcelDataService.fetchSampleParcelWeights().subscribe(weights => {\n      this.sampleParcelWeights = weights;\n      console.log('Sample Parcel Weights:', this.sampleParcelWeights);\n    }, error => {\n      console.error(error);\n    });\n  }\n  fetchItemsByWeight() {\n    this.parcelDataService.fetchItemsByWeight().subscribe(itemsByWeight => {\n      this.itemsByWeight = itemsByWeight;\n      console.log('Items By Weight:', this.itemsByWeight);\n    }, error => {\n      console.error(error);\n    });\n  }\n  get items() {\n    return this.packingForm.get('items');\n  }\n  addItem() {\n    const itemGroup = this.formBuilder.group({\n      index: [''],\n      weight: [''],\n      cost: ['']\n    });\n    this.items.push(itemGroup);\n  }\n  removeItem(index) {\n    this.items.removeAt(index);\n  }\n  onWeightSelected() {\n    const selectedWeight = this.packingForm.get('weightLimit')?.value;\n    const selectedItems = this.itemsByWeight[selectedWeight] || [];\n    this.items.controls.forEach(control => {\n      control.get('index')?.setValue(null);\n    });\n    selectedItems.forEach((item, index) => {\n      const control = this.items.at(index);\n      control.get('index')?.setValue(item.index);\n      control.get('weight')?.setValue(item.weight);\n      control.get('cost')?.setValue(item.cost);\n    });\n  }\n  submitForm() {\n    // Handle form submission here\n    // Access the selected weight, items, etc., from the form\n    console.log('Form Submitted!');\n    console.log('Selected Weight:', this.packingForm.get('weightLimit')?.value);\n    console.log('Selected Items:', this.packingForm.get('items')?.value);\n  }\n}\nPackingFormComponent.ɵfac = function PackingFormComponent_Factory(t) {\n  return new (t || PackingFormComponent)(i0.ɵɵdirectiveInject(i1.ParcelDataService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nPackingFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PackingFormComponent,\n  selectors: [[\"app-packing-form\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-12\"], [1, \"d-flex\", \"justify-content-center\", \"mt-5\"], [\"src\", \"../../assets/logo.png\", \"alt\", \"App Logo\", 1, \"app-logo\"], [1, \"p-5\", \"packingForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-light\", \"mb-4\"], [1, \"form-group\"], [\"for\", \"weight\", 1, \"text-light\", \"my-2\"], [\"id\", \"weight\", \"formControlName\", \"weightLimit\", 1, \"form-control\", 3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"items\"], [\"class\", \"item-group\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-yellow\", \"py-2\", \"my-2\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-yellow\", \"mx-2\", \"py-2\", 3, \"disabled\"], [3, \"value\"], [1, \"item-group\", 3, \"formGroupName\"], [1, \"form-row\", \"w-50\", \"mt-4\"], [1, \"col\"], [\"for\", \"selectedItem\", 1, \"text-light\"], [\"formControlName\", \"index\", 1, \"form-control\", 3, \"change\"], [3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-light\"], [\"type\", \"text\", \"formControlName\", \"weight\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [1, \"input-group\"], [\"type\", \"text\", \"formControlName\", \"cost\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [1, \"d-flex\", \"justify-content-start\"], [\"type\", \"button\", 1, \"btn\", \"btn-yellow\", \"my-2\", 3, \"click\"]],\n  template: function PackingFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 2)(7, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function PackingFormComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(8, \"h2\", 6);\n      i0.ɵɵtext(9, \"Choose a Sample Shipping Box\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Weight\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"select\", 9);\n      i0.ɵɵlistener(\"change\", function PackingFormComponent_Template_select_change_13_listener() {\n        return ctx.onWeightSelected();\n      });\n      i0.ɵɵelementStart(14, \"option\", 10);\n      i0.ɵɵtext(15, \"-- Select Weight Limit --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, PackingFormComponent_option_16_Template, 2, 2, \"option\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 12);\n      i0.ɵɵtemplate(18, PackingFormComponent_div_18_Template, 22, 5, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function PackingFormComponent_Template_button_click_19_listener() {\n        return ctx.addItem();\n      });\n      i0.ɵɵtext(20, \"Add Item\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 15);\n      i0.ɵɵtext(22, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.packingForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.sampleParcelWeights);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items.controls);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.packingForm.valid || ctx.items.length === 0);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.FormGroupName, i2.FormArrayName],\n  styles: [\".item-group[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.btn-danger[_ngcontent-%COMP%] {\\r\\n  margin-left: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wYWNraW5nLWZvcm0vcGFja2luZy1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5pdGVtLWdyb3VwIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuLmJ0bi1kYW5nZXIge1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","PackingFormComponent","constructor","parcelDataService","formBuilder","packingForm","group","weightLimit","items","array","ngOnInit","fetchSampleParcelWeights","fetchItemsByWeight","subscribe","weights","sampleParcelWeights","console","log","error","itemsByWeight","get","addItem","itemGroup","index","weight","cost","push","removeItem","removeAt","onWeightSelected","selectedWeight","value","selectedItems","controls","forEach","control","setValue","item","at","submitForm","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\components\\packing-form\\packing-form.component.html","C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\components\\packing-form\\packing-form.component.ts"],"sourcesContent":["<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"d-flex justify-content-center mt-5\">\r\n                <img src=\"../../assets/logo.png\" alt=\"App Logo\" class=\"app-logo\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <form class=\"p-5 packingForm\" [formGroup]=\"packingForm\" (ngSubmit)=\"submitForm()\">\r\n                <h2 class=\"text-light mb-4\">Choose a Sample Shipping Box</h2>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"weight\" class=\"text-light my-2\">Weight</label>\r\n                    <!-- Weight dropdown -->\r\n                    <select class=\"form-control\" id=\"weight\" formControlName=\"weightLimit\" (change)=\"onWeightSelected()\">\r\n                        <option value=\"\">-- Select Weight Limit --</option>\r\n                        <option *ngFor=\"let weightLimit of sampleParcelWeights\" [value]=\"weightLimit\">{{ weightLimit }}kg</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div formArrayName=\"items\">\r\n                    <div class=\"item-group\" *ngFor=\"let itemGroup of items.controls; let i = index\" [formGroupName]=\"i\">\r\n                        <div class=\"form-row w-50 mt-4\">\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"text-light\" for=\"selectedItem\">Select Item:</label>\r\n                                    <select class=\"form-control\" formControlName=\"index\" (change)=\"onWeightSelected()\">\r\n                                        <option [ngValue]=\"null\">-- Select Item --</option>\r\n                                        <option *ngFor=\"let option of itemsByWeight[packingForm.get('weightLimit')?.value]\" [ngValue]=\"option.value\">\r\n                                            {{ option.label }}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label class=\"text-light\">Weight</label>\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"weight\" [value]=\"selectedItem?.weight || ''\" readonly>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label class=\"text-light\">Cost</label>\r\n                                <div class=\"input-group\">\r\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"cost\" [value]=\"selectedItem?.cost || ''\" readonly>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"d-flex justify-content-start\">\r\n                                <button type=\"button\" class=\"btn btn-yellow my-2\" (click)=\"removeItem(i)\">Remove Item</button>\r\n                            </div>\r\n                        </div>\r\n                \r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" class=\"btn btn-yellow py-2 my-2\" (click)=\"addItem()\">Add Item</button>\r\n                <button type=\"submit\" [disabled]=\"!packingForm.valid || items.length === 0\" class=\"btn btn-yellow mx-2 py-2\">Submit</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, FormArray } from '@angular/forms';\r\nimport { Item } from '../../interfaces/item.interface';\r\nimport { ParcelDataService } from '../../services/parcel-data-service';\r\n\r\n@Component({\r\n  selector: 'app-packing-form',\r\n  templateUrl: './packing-form.component.html',\r\n  styleUrls: ['./packing-form.component.css']\r\n})\r\nexport class PackingFormComponent implements OnInit {\r\n  public packingForm: FormGroup;\r\n  public sampleParcelWeights: number[] = []; // Sample parcel weights fetched from the API\r\n  public itemsByWeight: { [weight: number]: Item[] } = {}; // Items grouped by weight\r\n\r\n  constructor(\r\n    private parcelDataService: ParcelDataService,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.packingForm = this.formBuilder.group({\r\n      weightLimit: [''],\r\n      items: this.formBuilder.array([])\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchSampleParcelWeights();\r\n    this.fetchItemsByWeight();\r\n  }\r\n\r\n  private fetchSampleParcelWeights(): void {\r\n    this.parcelDataService.fetchSampleParcelWeights().subscribe(\r\n      (weights: number[]) => {\r\n        this.sampleParcelWeights = weights;\r\n        console.log('Sample Parcel Weights:', this.sampleParcelWeights);\r\n      },\r\n      (error: any) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  private fetchItemsByWeight(): void {\r\n    this.parcelDataService.fetchItemsByWeight().subscribe(\r\n      (itemsByWeight: { [weight: number]: Item[] }) => {\r\n        this.itemsByWeight = itemsByWeight;\r\n        console.log('Items By Weight:', this.itemsByWeight);\r\n      },\r\n      (error: any) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  get items(): FormArray {\r\n    return this.packingForm.get('items') as FormArray;\r\n  }\r\n\r\n  addItem(): void {\r\n    const itemGroup = this.formBuilder.group({\r\n      index: [''],\r\n      weight: [''],\r\n      cost: ['']\r\n    });\r\n    this.items.push(itemGroup);\r\n  }\r\n\r\n  removeItem(index: number): void {\r\n    this.items.removeAt(index);\r\n  }\r\n\r\n  onWeightSelected(): void {\r\n    const selectedWeight = this.packingForm.get('weightLimit')?.value;\r\n    const selectedItems = this.itemsByWeight[selectedWeight] || [];\r\n    this.items.controls.forEach((control) => {\r\n      control.get('index')?.setValue(null);\r\n    });\r\n    selectedItems.forEach((item, index) => {\r\n      const control = this.items.at(index);\r\n      control.get('index')?.setValue(item.index);\r\n      control.get('weight')?.setValue(item.weight);\r\n      control.get('cost')?.setValue(item.cost);\r\n    });\r\n  }\r\n\r\n  submitForm(): void {\r\n    // Handle form submission here\r\n    // Access the selected weight, items, etc., from the form\r\n    console.log('Form Submitted!');\r\n    console.log('Selected Weight:', this.packingForm.get('weightLimit')?.value);\r\n    console.log('Selected Items:', this.packingForm.get('items')?.value);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}