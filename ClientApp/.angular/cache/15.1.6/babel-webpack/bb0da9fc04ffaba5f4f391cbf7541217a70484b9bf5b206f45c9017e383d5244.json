{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction PackingFormComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const weightLimit_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", weightLimit_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(weightLimit_r2);\n  }\n}\nfunction PackingFormComponent_div_18_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r6.index);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r6.name);\n  }\n}\nfunction PackingFormComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"div\", 19)(3, \"div\", 7)(4, \"label\", 20);\n    i0.ɵɵtext(5, \"Select Item:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"select\", 21)(7, \"option\", 10);\n    i0.ɵɵtext(8, \"-- Select Item --\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, PackingFormComponent_div_18_option_9_Template, 2, 2, \"option\", 11);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 19)(11, \"label\", 22);\n    i0.ɵɵtext(12, \"Weight\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 19)(15, \"label\", 22);\n    i0.ɵɵtext(16, \"Cost\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 24)(18, \"div\", 25)(19, \"span\", 26);\n    i0.ɵɵtext(20, \"\\u20AC\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(21, \"input\", 27);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(22, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function PackingFormComponent_div_18_Template_button_click_22_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const i_r4 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.removeItem(i_r4));\n    });\n    i0.ɵɵtext(23, \"Remove Item\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r4 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r4);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.availableItems);\n  }\n}\nexport class PackingFormComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n    this.packingForm = new FormGroup({});\n    this.availableItems = []; // Update this with the items from input.txt\n    this.sampleParcelWeights = []; // Update this with the sample parcel weights from input.txt\n    this.selectedItems = [];\n    this.selectedItem = null; // Add this line to store the selected item\n  }\n\n  ngOnInit() {\n    this.initForm();\n    const filePath = 'assets/input.txt';\n    this.http.get(filePath, {\n      responseType: 'text'\n    }).subscribe(response => {\n      this.parseInputFile(response); // Parse the input.txt file and update availableItems and sampleParcelWeights arrays\n    }, error => {\n      console.error(error);\n    });\n  }\n  initForm() {\n    this.packingForm = this.fb.group({\n      weightLimit: ['', Validators.required],\n      items: this.fb.array([])\n    });\n    this.packingForm.get('weightLimit')?.valueChanges.subscribe(selectedWeight => {\n      this.filterItemsByWeight(selectedWeight);\n    });\n  }\n  get items() {\n    return this.packingForm.get('items');\n  }\n  createItemGroup() {\n    return this.fb.group({\n      index: ['', Validators.required],\n      weight: [{\n        value: '',\n        disabled: true\n      }],\n      cost: [{\n        value: '',\n        disabled: true\n      }]\n    });\n  }\n  addItem() {\n    this.items.push(this.createItemGroup());\n  }\n  removeItem(index) {\n    this.items.removeAt(index);\n  }\n  filterItemsByWeight(selectedWeight) {\n    const selectedItems = this.selectedItems.find(item => item.weight === selectedWeight);\n    if (selectedItems) {\n      this.availableItems = selectedItems.items;\n    } else {\n      this.availableItems = [];\n    }\n  }\n  parseInputFile(fileContent) {\n    console.log('File Content:', fileContent); // Log the file content to check if it's correctly loaded\n    const lines = fileContent.split('\\n');\n    for (const line of lines) {\n      if (line.trim() === '') {\n        continue; // Skip empty lines\n      }\n\n      const [weightStr, itemsStr] = line.split(':');\n      console.log('Weight:', weightStr.trim()); // Log the weight string\n      console.log('Items:', itemsStr.trim()); // Log the items string\n      const weight = +weightStr.trim();\n      const items = itemsStr.split('(').slice(1).map(item => {\n        const [index, name, weightStr, costStr] = item.split(',').map(item => item.trim().replace(')', ''));\n        const weight = +weightStr.trim();\n        const cost = +costStr.trim();\n        return {\n          index,\n          name,\n          weight,\n          cost\n        };\n      });\n      this.sampleParcelWeights.push(weight);\n      this.selectedItems.push({\n        weight,\n        items\n      });\n      // Updating the items dropdown options\n      this.itemsByWeight[weight] = items.map(item => ({\n        value: item.index,\n        label: `${item.index}, ${item.name}, ${item.weight}kg, €${item.cost}`\n      }));\n    }\n  }\n  submitForm() {\n    if (this.packingForm.valid) {\n      const formValue = this.packingForm.value;\n      console.log(formValue);\n    }\n  }\n  onWeightSelected() {\n    this.selectedItem = null; // Reset selected item\n  }\n}\n\nPackingFormComponent.ɵfac = function PackingFormComponent_Factory(t) {\n  return new (t || PackingFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nPackingFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PackingFormComponent,\n  selectors: [[\"app-packing-form\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-12\"], [1, \"d-flex\", \"justify-content-center\", \"mt-5\"], [\"src\", \"../../assets/logo.png\", \"alt\", \"App Logo\", 1, \"app-logo\"], [1, \"p-5\", \"packingForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-light\", \"mb-4\"], [1, \"form-group\"], [\"for\", \"weight\", 1, \"text-light\", \"my-2\"], [\"id\", \"weight\", \"formControlName\", \"weightLimit\", 1, \"form-control\", 3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"items\"], [\"class\", \"item-group\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-yellow\", \"py-2\", \"my-2\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-yellow\", 3, \"disabled\"], [3, \"value\"], [1, \"item-group\", 3, \"formGroupName\"], [1, \"form-row\"], [1, \"col\"], [\"for\", \"selectedItem\"], [\"id\", \"selectedItem\", \"formControlName\", \"index\", 1, \"form-control\"], [1, \"text-light\"], [\"type\", \"number\", \"formControlName\", \"weight\", \"readonly\", \"\", 1, \"form-control\"], [1, \"input-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\"], [\"type\", \"number\", \"formControlName\", \"cost\", \"readonly\", \"\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-yellow\", 3, \"click\"]],\n  template: function PackingFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 2)(7, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function PackingFormComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(8, \"h2\", 6);\n      i0.ɵɵtext(9, \"Enter Parcel Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Weight\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"select\", 9);\n      i0.ɵɵlistener(\"change\", function PackingFormComponent_Template_select_change_13_listener() {\n        return ctx.onWeightSelected();\n      });\n      i0.ɵɵelementStart(14, \"option\", 10);\n      i0.ɵɵtext(15, \"-- Select Weight Limit --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, PackingFormComponent_option_16_Template, 2, 2, \"option\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 12);\n      i0.ɵɵtemplate(18, PackingFormComponent_div_18_Template, 24, 2, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function PackingFormComponent_Template_button_click_19_listener() {\n        return ctx.addItem();\n      });\n      i0.ɵɵtext(20, \"Add Item\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 15);\n      i0.ɵɵtext(22, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.packingForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.sampleParcelWeights);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items.controls);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.packingForm.valid || ctx.items.length === 0);\n    }\n  },\n  dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n  styles: [\".item-group[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.btn-danger[_ngcontent-%COMP%] {\\r\\n  margin-left: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFja2luZy1mb3JtL3BhY2tpbmctZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIuaXRlbS1ncm91cCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5idG4tZGFuZ2VyIHtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;ICiBtDC,kCAA8E;IAAAA,YAAiB;IAAAA,iBAAS;;;;IAAhDA,sCAAqB;IAACA,eAAiB;IAAjBA,oCAAiB;;;;;IAY/EA,kCAAiE;IAAAA,YAAe;IAAAA,iBAAS;;;;IAA7CA,qCAAoB;IAACA,eAAe;IAAfA,kCAAe;;;;;;IAPpGA,+BAAoG;IAI1DA,4BAAY;IAAAA,iBAAQ;IAC9CA,kCAAuE;IAClDA,iCAAiB;IAAAA,iBAAS;IAC3CA,mFAAyF;IAC7FA,iBAAS;IAGjBA,gCAAiB;IACaA,uBAAM;IAAAA,iBAAQ;IACxCA,6BAA4E;IAChFA,iBAAM;IACNA,gCAAiB;IACaA,qBAAI;IAAAA,iBAAQ;IACtCA,gCAAyB;IAEcA,uBAAC;IAAAA,iBAAO;IAE3CA,6BAA0E;IAC9EA,iBAAM;IAGdA,mCAAqE;IAAxBA;MAAA;MAAA;MAAA;MAAA,OAASA,sCAAa;IAAA,EAAC;IAACA,4BAAW;IAAAA,iBAAS;;;;;IAzBbA,oCAAmB;IAOtDA,eAAiB;IAAjBA,+CAAiB;;;ADpBlF,OAAM,MAAOC,oBAAoB;EAO/BC,YAAoBC,EAAe,EAAUC,IAAgB;IAAzC,OAAE,GAAFD,EAAE;IAAuB,SAAI,GAAJC,IAAI;IANjD,gBAAW,GAAc,IAAIN,SAAS,CAAC,EAAE,CAAC;IAC1C,mBAAc,GAAU,EAAE,CAAC,CAAC;IAC5B,wBAAmB,GAAa,EAAE,CAAC,CAAC;IACpC,kBAAa,GAAuC,EAAE;IACtD,iBAAY,GAAQ,IAAI,CAAC,CAAC;EAEuC;;EAEjEO,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;IACf,MAAMC,QAAQ,GAAG,kBAAkB;IACnC,IAAI,CAACH,IAAI,CAACI,GAAG,CAACD,QAAQ,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,SAAS,CACxDC,QAAQ,IAAI;MACX,IAAI,CAACC,cAAc,CAACD,QAAQ,CAAC,CAAC;IAChC,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;EAEAP,QAAQ;IACN,IAAI,CAACS,WAAW,GAAG,IAAI,CAACZ,EAAE,CAACa,KAAK,CAAC;MAC/BC,WAAW,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACmB,QAAQ,CAAC;MACtCC,KAAK,EAAE,IAAI,CAAChB,EAAE,CAACiB,KAAK,CAAC,EAAE;KACxB,CAAC;IAEF,IAAI,CAACL,WAAW,CAACP,GAAG,CAAC,aAAa,CAAC,EAAEa,YAAY,CAACX,SAAS,CAAEY,cAAc,IAAI;MAC7E,IAAI,CAACC,mBAAmB,CAACD,cAAc,CAAC;IAC1C,CAAC,CAAC;EACJ;EAEA,IAAIH,KAAK;IACP,OAAO,IAAI,CAACJ,WAAW,CAACP,GAAG,CAAC,OAAO,CAAc;EACnD;EAEAgB,eAAe;IACb,OAAO,IAAI,CAACrB,EAAE,CAACa,KAAK,CAAC;MACnBS,KAAK,EAAE,CAAC,EAAE,EAAE1B,UAAU,CAACmB,QAAQ,CAAC;MAChCQ,MAAM,EAAE,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE,CAAC;MACvCC,IAAI,EAAE,CAAC;QAAEF,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE;KACrC,CAAC;EACJ;EAEAE,OAAO;IACL,IAAI,CAACX,KAAK,CAACY,IAAI,CAAC,IAAI,CAACP,eAAe,EAAE,CAAC;EACzC;EAEAQ,UAAU,CAACP,KAAa;IACxB,IAAI,CAACN,KAAK,CAACc,QAAQ,CAACR,KAAK,CAAC;EAC1B;EAEAF,mBAAmB,CAACD,cAAsB;IACxC,MAAMY,aAAa,GAAG,IAAI,CAACA,aAAa,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACV,MAAM,KAAKJ,cAAc,CAAC;IACrF,IAAIY,aAAa,EAAE;MACjB,IAAI,CAACG,cAAc,GAAGH,aAAa,CAACf,KAAK;KAC1C,MAAM;MACL,IAAI,CAACkB,cAAc,GAAG,EAAE;;EAE5B;EAEAzB,cAAc,CAAC0B,WAAmB;IAChCxB,OAAO,CAACyB,GAAG,CAAC,eAAe,EAAED,WAAW,CAAC,CAAC,CAAC;IAC3C,MAAME,KAAK,GAAGF,WAAW,CAACG,KAAK,CAAC,IAAI,CAAC;IAErC,KAAK,MAAMC,IAAI,IAAIF,KAAK,EAAE;MACxB,IAAIE,IAAI,CAACC,IAAI,EAAE,KAAK,EAAE,EAAE;QACtB,SAAS,CAAC;;;MAEZ,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGH,IAAI,CAACD,KAAK,CAAC,GAAG,CAAC;MAC7C3B,OAAO,CAACyB,GAAG,CAAC,SAAS,EAAEK,SAAS,CAACD,IAAI,EAAE,CAAC,CAAC,CAAC;MAC1C7B,OAAO,CAACyB,GAAG,CAAC,QAAQ,EAAEM,QAAQ,CAACF,IAAI,EAAE,CAAC,CAAC,CAAC;MACxC,MAAMjB,MAAM,GAAG,CAACkB,SAAS,CAACD,IAAI,EAAE;MAChC,MAAMxB,KAAK,GAAG0B,QAAQ,CAACJ,KAAK,CAAC,GAAG,CAAC,CAACK,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEX,IAAI,IAAI;QACtD,MAAM,CAACX,KAAK,EAAEuB,IAAI,EAAEJ,SAAS,EAAEK,OAAO,CAAC,GAAGb,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC,CAACM,GAAG,CAAEX,IAAI,IAAKA,IAAI,CAACO,IAAI,EAAE,CAACO,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACrG,MAAMxB,MAAM,GAAG,CAACkB,SAAS,CAACD,IAAI,EAAE;QAChC,MAAMd,IAAI,GAAG,CAACoB,OAAO,CAACN,IAAI,EAAE;QAC5B,OAAO;UAAElB,KAAK;UAAEuB,IAAI;UAAEtB,MAAM;UAAEG;QAAI,CAAE;MACtC,CAAC,CAAC;MAEF,IAAI,CAACsB,mBAAmB,CAACpB,IAAI,CAACL,MAAM,CAAC;MACrC,IAAI,CAACQ,aAAa,CAACH,IAAI,CAAC;QAAEL,MAAM;QAAEP;MAAK,CAAE,CAAC;MAE1C;MACA,IAAI,CAACiC,aAAa,CAAC1B,MAAM,CAAC,GAAGP,KAAK,CAAC4B,GAAG,CAAEX,IAAI,KAAM;QAChDT,KAAK,EAAES,IAAI,CAACX,KAAK;QACjB4B,KAAK,EAAE,GAAGjB,IAAI,CAACX,KAAK,KAAKW,IAAI,CAACY,IAAI,KAAKZ,IAAI,CAACV,MAAM,QAAQU,IAAI,CAACP,IAAI;OACpE,CAAC,CAAC;;EAGP;EAEAyB,UAAU;IACR,IAAI,IAAI,CAACvC,WAAW,CAACwC,KAAK,EAAE;MAC1B,MAAMC,SAAS,GAAG,IAAI,CAACzC,WAAW,CAACY,KAAK;MACxCb,OAAO,CAACyB,GAAG,CAACiB,SAAS,CAAC;;EAE1B;EAEAC,gBAAgB;IACd,IAAI,CAACC,YAAY,GAAG,IAAI,CAAC,CAAC;EAC5B;;;AAtGWzD,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA0D;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjC/D,8BAA6B;MAIbA,yBAAiE;MACrEA,iBAAM;MAIdA,8BAAiB;MAE+CA;QAAA,OAAYgE,gBAAY;MAAA,EAAC;MAC7EhE,6BAA4B;MAAAA,oCAAoB;MAAAA,iBAAK;MAErDA,+BAAwB;MACwBA,uBAAM;MAAAA,iBAAQ;MAE1DA,kCAAqG;MAA9BA;QAAA,OAAUgE,sBAAkB;MAAA,EAAC;MAChGhE,mCAAiB;MAAAA,0CAAyB;MAAAA,iBAAS;MACnDA,8EAAwG;MAC5GA,iBAAS;MAGbA,gCAA2B;MACvBA,yEA0BM;MACVA,iBAAM;MACNA,mCAA2E;MAApBA;QAAA,OAASgE,aAAS;MAAA,EAAC;MAAChE,yBAAQ;MAAAA,iBAAS;MAC5FA,mCAAmG;MAAAA,uBAAM;MAAAA,iBAAS;;;MA1CxFA,eAAyB;MAAzBA,2CAAyB;MAQXA,eAAsB;MAAtBA,iDAAsB;MAK/BA,eAAmB;MAAnBA,4CAAmB;MA6B5BA,eAAqD;MAArDA,2EAAqD","names":["FormGroup","Validators","i0","PackingFormComponent","constructor","fb","http","ngOnInit","initForm","filePath","get","responseType","subscribe","response","parseInputFile","error","console","packingForm","group","weightLimit","required","items","array","valueChanges","selectedWeight","filterItemsByWeight","createItemGroup","index","weight","value","disabled","cost","addItem","push","removeItem","removeAt","selectedItems","find","item","availableItems","fileContent","log","lines","split","line","trim","weightStr","itemsStr","slice","map","name","costStr","replace","sampleParcelWeights","itemsByWeight","label","submitForm","valid","formValue","onWeightSelected","selectedItem","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\packing-form\\packing-form.component.ts","C:\\localdev\\ParcelPal\\ParcelPal\\ClientApp\\src\\app\\packing-form\\packing-form.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Item } from '../';\r\n\r\n\r\n@Component({\r\n  selector: 'app-packing-form',\r\n  templateUrl: './packing-form.component.html',\r\n  styleUrls: ['./packing-form.component.css']\r\n})\r\nexport class PackingFormComponent implements OnInit {\r\n  packingForm: FormGroup = new FormGroup({});\r\n  availableItems: any[] = []; // Update this with the items from input.txt\r\n  sampleParcelWeights: number[] = []; // Update this with the sample parcel weights from input.txt\r\n  selectedItems: { weight: number, items: any[] }[] = [];\r\n  selectedItem: any = null; // Add this line to store the selected item\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    const filePath = 'assets/input.txt';\r\n    this.http.get(filePath, { responseType: 'text' }).subscribe(\r\n      (response) => {\r\n        this.parseInputFile(response);// Parse the input.txt file and update availableItems and sampleParcelWeights arrays\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  initForm(): void {\r\n    this.packingForm = this.fb.group({\r\n      weightLimit: ['', Validators.required],\r\n      items: this.fb.array([])\r\n    });\r\n\r\n    this.packingForm.get('weightLimit')?.valueChanges.subscribe((selectedWeight) => {\r\n      this.filterItemsByWeight(selectedWeight);\r\n    });\r\n  }\r\n\r\n  get items(): FormArray {\r\n    return this.packingForm.get('items') as FormArray;\r\n  }\r\n\r\n  createItemGroup(): FormGroup {\r\n    return this.fb.group({\r\n      index: ['', Validators.required],\r\n      weight: [{ value: '', disabled: true }],\r\n      cost: [{ value: '', disabled: true }]\r\n    });\r\n  }\r\n\r\n  addItem(): void {\r\n    this.items.push(this.createItemGroup());\r\n  }\r\n\r\n  removeItem(index: number): void {\r\n  this.items.removeAt(index);\r\n  }\r\n\r\n  filterItemsByWeight(selectedWeight: number): void {\r\n    const selectedItems = this.selectedItems.find(item => item.weight === selectedWeight);\r\n    if (selectedItems) {\r\n      this.availableItems = selectedItems.items;\r\n    } else {\r\n      this.availableItems = [];\r\n    }\r\n  }\r\n\r\n  parseInputFile(fileContent: string): void {\r\n    console.log('File Content:', fileContent); // Log the file content to check if it's correctly loaded\r\n    const lines = fileContent.split('\\n');\r\n\r\n    for (const line of lines) {\r\n      if (line.trim() === '') {\r\n        continue; // Skip empty lines\r\n      }\r\n      const [weightStr, itemsStr] = line.split(':');\r\n      console.log('Weight:', weightStr.trim()); // Log the weight string\r\n      console.log('Items:', itemsStr.trim()); // Log the items string\r\n      const weight = +weightStr.trim();\r\n      const items = itemsStr.split('(').slice(1).map((item) => {\r\n        const [index, name, weightStr, costStr] = item.split(',').map((item) => item.trim().replace(')', ''));\r\n        const weight = +weightStr.trim();\r\n        const cost = +costStr.trim();\r\n        return { index, name, weight, cost };\r\n      });\r\n\r\n      this.sampleParcelWeights.push(weight);\r\n      this.selectedItems.push({ weight, items });\r\n\r\n      // Updating the items dropdown options\r\n      this.itemsByWeight[weight] = items.map((item) => ({\r\n        value: item.index,\r\n        label: `${item.index}, ${item.name}, ${item.weight}kg, €${item.cost}`\r\n      }));\r\n\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    if (this.packingForm.valid) {\r\n      const formValue = this.packingForm.value;\r\n      console.log(formValue);\r\n    }\r\n  }\r\n\r\n  onWeightSelected(): void {\r\n    this.selectedItem = null; // Reset selected item\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"d-flex justify-content-center mt-5\">\r\n                <img src=\"../../assets/logo.png\" alt=\"App Logo\" class=\"app-logo\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <form class=\"p-5 packingForm\" [formGroup]=\"packingForm\" (ngSubmit)=\"submitForm()\">\r\n                <h2 class=\"text-light mb-4\">Enter Parcel Details</h2>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"weight\" class=\"text-light my-2\">Weight</label>\r\n                    <!-- Weight dropdown -->\r\n                    <select class=\"form-control\" id=\"weight\" formControlName=\"weightLimit\" (change)=\"onWeightSelected()\">\r\n                        <option value=\"\">-- Select Weight Limit --</option>\r\n                        <option *ngFor=\"let weightLimit of sampleParcelWeights\" [value]=\"weightLimit\">{{ weightLimit }}</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div formArrayName=\"items\">\r\n                    <div *ngFor=\"let itemGroup of items.controls; let i = index\" class=\"item-group\" [formGroupName]=\"i\">\r\n                        <div class=\"form-row\">\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"selectedItem\">Select Item:</label>\r\n                                    <select class=\"form-control\" id=\"selectedItem\" formControlName=\"index\">\r\n                                        <option value=\"\">-- Select Item --</option>\r\n                                        <option *ngFor=\"let item of availableItems\" [value]=\"item.index\">{{ item.name }}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label class=\"text-light\">Weight</label>\r\n                                <input type=\"number\" formControlName=\"weight\" class=\"form-control\" readonly>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label class=\"text-light\">Cost</label>\r\n                                <div class=\"input-group\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\">€</span>\r\n                                    </div>\r\n                                    <input type=\"number\" formControlName=\"cost\" class=\"form-control\" readonly>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"button\" class=\"btn btn-yellow\" (click)=\"removeItem(i)\">Remove Item</button>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" class=\"btn btn-yellow py-2 my-2\" (click)=\"addItem()\">Add Item</button>\r\n                <button type=\"submit\" [disabled]=\"!packingForm.valid || items.length === 0\" class=\"btn btn-yellow\">Submit</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}